(#Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ("SWANK-BACKEND" si::select-package)) #1=#P"c:/zznix/home/zhoujd/zzemacs/site-lisp/slime/swank-gray.lisp" 0) #Y(si::bytecodes nil nil (15 0 15 1 15 2 14 3 1 5 12 1 6 7 3 12 15 7 15 8 14 3 1 12 12 1 13 7 3 6 5 12 77 19 4 14 29) #2=#A(t (15) (swank-backend::slime-output-stream (gray::fundamental-character-output-stream) (:initargs (:output-fn) :name swank-backend::output-fn) :initfunction make-string #Y(nil nil nil (26 9 8000 19 1 4 29) #2# #1# 265) (:initform (make-string 8000) :name swank-backend::buffer) (:initform 0 :name fill-pointer) (:initform 0 :name swank-backend::column) :name #3="buffer write lock" swank-backend::make-lock #Y(nil nil nil (26 14 9 15 10 19 2 11 29) #2# #1# 265) (:initform (swank-backend::make-lock :name #3#) :name swank-backend::lock) clos::load-defclass)) #1# 265) #Y(si::bytecodes nil nil (15 0 1 12 12 14 13 9 2 19 4 14 1 0 73 29) #4=#A(t (15) (swank-backend::with-slime-output-stream #:g1510 #:g1509 #:g1511 si::dm-too-few-arguments stream swank-backend::body with-slots (swank-backend::lock swank-backend::output-fn swank-backend::buffer fill-pointer swank-backend::column) swank-backend::call-with-lock-held swank-backend::lock lambda #Y(swank-backend::with-slime-output-stream nil nil (24 45 1 24 45 2 26 10 1 5 45 3 10 0 76 39 6 13 2 19 1 4 10 0 4 12 10 0 5 51 0 22 45 5 10 1 45 6 15 7 15 8 13 1 15 9 15 10 15 11 77 10 0 7 3 6 3 6 4 73 29) #4# #1# 531) t si::fset)) #1# 531) #Y(si::bytecodes nil nil (15 0 77 15 1 15 2 1 49 12 14 50 19 6 51 29) #5=#A(t (52) (gray::stream-write-char (swank-backend::slime-output-stream t) (stream char) stream char #6=#:g1587 #:g1589 #:g1588 (slot-value #6# 'swank-backend::lock) #:g1591 #:g1590 (slot-value #6# 'swank-backend::output-fn) #:g1593 #:g1592 (slot-value #6# 'swank-backend::buffer) #:g1595 #:g1594 (slot-value #6# 'fill-pointer) #:g1597 #:g1596 (slot-value #6# 'swank-backend::column) swank-backend::lock slot-value swank-backend::buffer fill-pointer si::schar-set #:g1601 #:g1602 #:g1604 + #:g1603 (setf slot-value) #:g1605 swank-backend::column #:g1606 #:g1608 #:g1607 (setf slot-value) #\Newline char= #:g1609 #:g1610 #:g1611 (setf slot-value) length = finish-output #Y(nil nil nil (26 13 0 1 23 17 22 12 13 0 1 24 17 22 12 13 1 19 3 25 10 0 45 26 1 24 45 27 8 1 45 28 13 2 10 1 17 22 12 13 0 19 2 29 45 30 13 0 13 3 13 2 33 31 18 3 43 4 10 0 45 32 1 33 45 34 8 1 45 35 13 2 10 1 17 22 12 13 0 19 2 29 45 36 13 0 13 3 13 2 33 37 18 3 43 4 15 38 13 1 19 2 39 39 27 10 0 45 40 1 33 45 41 8 0 45 42 13 0 13 2 13 1 33 43 18 3 43 1 43 2 13 0 1 24 17 22 12 13 0 1 23 17 22 16 44 12 19 2 45 73 39 6 13 2 19 1 46 29) #5# #1# 711) swank-backend::call-with-lock-held #Y(nil nil nil (24 45 3 24 45 4 26 10 1 45 5 13 0 1 21 17 22 12 34 47 12 19 2 48 43 1 10 0 73 29) #5# #1# 711) t clos::install-method)) #1# 711) #Y(si::bytecodes nil nil (15 0 77 15 1 15 2 1 61 12 14 49 19 6 62 29) #7=#A(t (63) (gray::stream-write-string (swank-backend::slime-output-stream t) (stream string &optional swank-backend::start swank-backend::end) stream string swank-backend::start swank-backend::end #8=#:g1666 #:g1668 #:g1667 (slot-value #8# 'swank-backend::lock) #:g1670 #:g1669 (slot-value #8# 'swank-backend::output-fn) #:g1672 #:g1671 (slot-value #8# 'swank-backend::buffer) #:g1674 #:g1673 (slot-value #8# 'fill-pointer) #:g1676 #:g1675 (slot-value #8# 'swank-backend::column) swank-backend::lock slot-value length swank-backend::buffer swank-backend::len - count fill-pointer swank-backend::free >= gray::stream-finish-output < :start1 :start2 :end2 replace #:g1677 #:g1678 #:g1680 + #:g1679 (setf slot-value) swank-backend::output-fn subseq #\Newline :from-end t :start :end position swank-backend::last-newline #:g1681 swank-backend::column #:g1682 #:g1683 (setf slot-value) #Y(nil nil nil (26 10 2 40 3 8 0 45 5 10 2 40 5 10 4 16 25 45 6 13 2 1 26 17 24 16 25 45 27 13 1 13 2 19 2 28 45 29 13 1 13 4 1 30 17 24 12 19 2 28 45 31 13 1 13 0 19 2 32 39 6 13 9 19 1 33 13 1 13 2 19 2 34 39 70 13 5 1 26 17 24 12 13 8 14 35 13 5 1 30 17 24 12 14 36 13 4 14 37 13 3 19 8 38 10 5 45 39 1 30 45 40 10 3 45 41 13 2 10 1 17 24 12 13 0 19 2 42 45 43 13 0 13 3 13 2 33 44 18 3 43 4 38 21 13 5 1 45 17 24 12 13 8 13 4 13 3 19 3 46 12 20 1 23 15 47 13 8 14 48 14 49 14 50 13 4 14 51 13 3 19 8 52 45 53 10 6 45 54 1 55 45 56 10 2 39 12 13 6 13 2 9 1 19 3 28 38 13 13 8 1 55 17 24 12 13 4 19 2 42 45 57 13 0 13 2 13 1 33 58 18 3 43 1 43 2 43 1 43 5 29) #7# #1# 1047) swank-backend::call-with-lock-held #Y(nil nil nil (24 45 3 24 45 4 25 40 2 77 46 5 25 40 2 77 46 6 26 10 3 45 7 13 0 1 23 17 24 12 34 59 12 19 2 60 43 1 10 2 73 29) #7# #1# 1047) clos::install-method)) #1# 1047) #Y(si::bytecodes nil nil (15 0 77 15 1 15 2 1 25 12 14 26 19 6 27 29) #9=#A(t (28) (gray::stream-line-column (swank-backend::slime-output-stream) (stream) stream #10=#:g1717 #:g1719 #:g1718 (slot-value #10# 'swank-backend::lock) #:g1721 #:g1720 (slot-value #10# 'swank-backend::output-fn) #:g1723 #:g1722 (slot-value #10# 'swank-backend::buffer) #:g1725 #:g1724 (slot-value #10# 'fill-pointer) #:g1727 #:g1726 (slot-value #10# 'swank-backend::column) swank-backend::lock slot-value swank-backend::column #Y(nil nil nil (26 13 0 1 22 17 21 29) #9# #1# 1991) swank-backend::call-with-lock-held #Y(nil nil nil (24 45 3 26 10 0 45 4 13 0 1 20 17 21 12 34 23 12 19 2 24 43 1 29) #9# #1# 1991) t clos::install-method)) #1# 1991) #Y(si::bytecodes nil nil (15 0 77 15 1 15 2 1 4 12 14 5 19 6 6 29) #11=#A(t (7) (swank-backend::stream-line-length (swank-backend::slime-output-stream) (stream) stream #Y(nil nil nil (24 45 3 26 8 75 73 29) #11# #1# 2114) t clos::install-method)) #1# 2114) #Y(si::bytecodes nil nil (15 0 77 15 1 15 2 1 33 12 14 34 19 6 35 29) #12=#A(t (36) (gray::stream-finish-output (swank-backend::slime-output-stream) (stream) stream #13=#:g1770 #:g1772 #:g1771 (slot-value #13# 'swank-backend::lock) #:g1774 #:g1773 (slot-value #13# 'swank-backend::output-fn) #:g1776 #:g1775 (slot-value #13# 'swank-backend::buffer) #:g1778 #:g1777 (slot-value #13# 'fill-pointer) #:g1780 #:g1779 (slot-value #13# 'swank-backend::column) swank-backend::lock slot-value fill-pointer zerop swank-backend::output-fn swank-backend::buffer subseq #:g1781 #:g1782 #:g1783 (setf slot-value) #Y(nil nil nil (26 13 0 1 22 17 21 16 23 76 73 39 57 13 0 1 24 17 21 12 13 0 1 25 17 21 12 9 0 13 0 1 22 17 21 12 19 3 26 12 20 1 23 10 0 45 27 1 22 45 28 8 0 45 29 13 0 13 2 13 1 33 30 18 3 43 1 43 2 29) #12# #1# 2185) swank-backend::call-with-lock-held #Y(nil nil nil (24 45 3 26 10 0 45 4 13 0 1 20 17 21 12 34 31 12 19 2 32 43 1 75 73 29) #12# #1# 2185) t clos::install-method)) #1# 2185) #Y(si::bytecodes nil nil (15 0 77 15 1 15 2 1 5 12 14 6 19 6 7 29) #14=#A(t (8) (gray::stream-force-output (swank-backend::slime-output-stream) (stream) stream gray::stream-finish-output #Y(nil nil nil (24 45 3 26 13 0 19 1 4 29) #14# #1# 2419) t clos::install-method)) #1# 2419) #Y(si::bytecodes nil nil (15 0 77 15 1 15 2 1 28 12 14 25 19 6 29 29) #15=#A(t (30) (gray::stream-fresh-line (swank-backend::slime-output-stream) (stream) stream #16=#:g1817 #:g1819 #:g1818 (slot-value #16# 'swank-backend::lock) #:g1821 #:g1820 (slot-value #16# 'swank-backend::output-fn) #:g1823 #:g1822 (slot-value #16# 'swank-backend::buffer) #:g1825 #:g1824 (slot-value #16# 'fill-pointer) #:g1827 #:g1826 (slot-value #16# 'swank-backend::column) swank-backend::lock slot-value swank-backend::column zerop terpri t #Y(nil nil nil (26 13 0 1 22 17 21 16 23 39 5 75 73 38 9 13 1 19 1 24 11 25 73 29) #15# #1# 2518) swank-backend::call-with-lock-held #Y(nil nil nil (24 45 3 26 10 0 45 4 13 0 1 20 17 21 12 34 26 12 19 2 27 43 1 29) #15# #1# 2518) clos::install-method)) #1# 2518) #Y(si::bytecodes nil nil (15 0 15 1 15 2 15 3 15 4 14 5 1 9 12 1 10 7 3 6 4 12 77 19 4 11 29) #17=#A(t (12) (swank-backend::slime-input-stream (gray::fundamental-character-input-stream) (:initargs (:input-fn) :name swank-backend::input-fn) (:initform "" :name swank-backend::buffer) (:initform 0 :name swank-backend::index) :initfunction :name #18="buffer read lock" swank-backend::make-lock #Y(nil nil nil (26 14 6 15 7 19 2 8 29) #17# #1# 2685) (:initform (swank-backend::make-lock :name #18#) :name swank-backend::lock) clos::load-defclass)) #1# 2685) #Y(si::bytecodes nil nil (15 0 77 15 1 15 2 1 44 12 14 45 19 6 46 29) #19=#A(t (47) (gray::stream-read-char (swank-backend::slime-input-stream) (swank-backend::s) swank-backend::s swank-backend::lock slot-value #20=#:g1845 #:g1847 #:g1846 (slot-value #20# 'swank-backend::buffer) #:g1849 #:g1848 (slot-value #20# 'swank-backend::index) #:g1851 #:g1850 (slot-value #20# 'swank-backend::input-fn) swank-backend::index swank-backend::buffer length = swank-backend::input-fn string zerop :eof #:g1852 #:g1853 #:g1854 (setf slot-value) #:g1855 #:g1856 #:g1857 (setf slot-value) (plusp (length swank-backend::buffer)) si::assert-failure plusp aref #:g1858 #:g1859 #:g1861 + #:g1860 (setf slot-value) #Y(nil nil nil (26 10 1 45 6 13 0 1 16 17 5 12 13 0 1 17 17 5 16 18 12 19 2 19 39 82 13 0 1 20 17 5 12 20 0 23 45 21 10 0 16 18 16 22 39 8 11 23 73 36 2 38 53 10 1 45 24 1 17 45 25 10 2 45 26 13 0 13 2 13 1 33 27 18 3 43 1 43 2 10 1 45 28 1 16 45 29 8 0 45 30 13 0 13 2 13 1 33 31 18 3 43 1 43 2 43 1 38 6 15 32 19 1 33 13 0 1 17 17 5 16 18 16 34 76 40 -17 13 0 1 17 17 5 12 13 0 1 16 17 5 12 19 2 35 12 10 0 45 36 1 16 45 37 8 1 45 38 13 2 10 1 17 5 12 13 0 19 2 39 45 40 13 0 13 3 13 2 33 41 18 3 43 4 22 73 43 1 29) #19# #1# 2894) swank-backend::call-with-lock-held #Y(nil nil nil (24 45 3 26 57 0 60 15 13 1 1 4 17 5 12 34 42 12 19 2 43 63 29) #19# #1# 2894) t clos::install-method)) #1# 2894) #Y(si::bytecodes nil nil (15 0 77 15 1 15 2 1 19 12 14 20 19 6 21 29) #21=#A(t (22) (gray::stream-listen (swank-backend::slime-input-stream) (swank-backend::s) swank-backend::s swank-backend::lock slot-value #22=#:g1877 #:g1879 #:g1878 (slot-value #22# 'swank-backend::buffer) #:g1881 #:g1880 (slot-value #22# 'swank-backend::index) swank-backend::index swank-backend::buffer length < #Y(nil nil nil (26 10 0 45 6 13 0 1 13 17 5 12 13 0 1 14 17 5 16 15 12 19 2 16 43 1 29) #21# #1# 3435) swank-backend::call-with-lock-held #Y(nil nil nil (24 45 3 26 13 0 1 4 17 5 12 34 17 12 19 2 18 29) #21# #1# 3435) t clos::install-method)) #1# 3435) #Y(si::bytecodes nil nil (15 0 77 15 1 15 2 1 29 12 14 30 19 6 31 29) #23=#A(t (32) (gray::stream-unread-char (swank-backend::slime-input-stream t) (swank-backend::s char) swank-backend::s char swank-backend::lock slot-value #24=#:g1918 #:g1920 #:g1919 (slot-value #24# 'swank-backend::buffer) #:g1922 #:g1921 (slot-value #24# 'swank-backend::index) #:g1923 swank-backend::index #:g1924 #:g1926 - #:g1925 (setf slot-value) swank-backend::buffer aref eql si::aset "stream-unread-char: ignoring ~S (expected ~S)" warn #Y(nil nil nil (26 10 1 45 7 10 0 45 14 1 15 45 16 8 1 45 17 13 2 10 1 17 6 12 13 0 19 2 18 45 19 13 0 13 3 13 2 33 20 18 3 43 4 13 0 1 21 17 6 12 13 0 1 15 17 6 12 19 2 22 12 10 1 17 23 39 22 13 0 1 21 17 6 12 13 0 1 15 17 6 12 13 1 19 3 24 38 26 15 25 13 1 13 0 1 21 17 6 12 13 0 1 15 17 6 12 19 2 22 12 19 3 26 43 1 29) #23# #1# 3625) swank-backend::call-with-lock-held #Y(nil nil nil (24 45 3 24 45 4 26 13 1 1 5 17 6 12 34 27 12 19 2 28 75 73 29) #23# #1# 3625) t clos::install-method)) #1# 3625) #Y(si::bytecodes nil nil (15 0 77 15 1 15 2 1 26 12 14 27 19 6 28 29) #25=#A(t (29) (gray::stream-clear-input (swank-backend::slime-input-stream) (swank-backend::s) swank-backend::s swank-backend::lock slot-value #26=#:g1963 #:g1965 #:g1964 (slot-value #26# 'swank-backend::buffer) #:g1967 #:g1966 (slot-value #26# 'swank-backend::index) #:g1968 swank-backend::buffer #:g1969 "" #:g1970 (setf slot-value) #:g1971 swank-backend::index #:g1972 #:g1973 (setf slot-value) #Y(nil nil nil (26 10 0 45 6 10 0 45 13 1 14 45 15 1 16 45 17 13 0 13 2 13 1 33 18 18 3 43 1 43 2 10 0 45 19 1 20 45 21 8 0 45 22 13 0 13 2 13 1 33 23 18 3 43 1 43 2 43 1 29) #25# #1# 4048) swank-backend::call-with-lock-held #Y(nil nil nil (24 45 3 26 13 0 1 4 17 5 12 34 24 12 19 2 25 75 73 29) #25# #1# 4048) t clos::install-method)) #1# 4048) #Y(si::bytecodes nil nil (15 0 77 15 1 15 2 1 4 12 14 5 19 6 6 29) #27=#A(t (7) (gray::stream-line-column (swank-backend::slime-input-stream) (swank-backend::s) swank-backend::s #Y(nil nil nil (24 45 3 26 75 73 29) #27# #1# 4266) t clos::install-method)) #1# 4266) #Y(si::bytecodes nil nil (15 0 77 15 1 15 2 1 4 12 14 5 19 6 6 29) #28=#A(t (7) (swank-backend::stream-line-length (swank-backend::slime-input-stream) (swank-backend::s) swank-backend::s #Y(nil nil nil (24 45 3 26 8 75 73 29) #28# #1# 4332) t clos::install-method)) #1# 4332) #Y(si::bytecodes nil nil (15 0 77 15 1 15 2 1 26 12 14 27 19 6 28 29) #29=#A(t (29) (gray::stream-read-char-no-hang (swank-backend::slime-input-stream) (swank-backend::s) swank-backend::s swank-backend::lock slot-value #30=#:g2001 #:g2003 #:g2002 (slot-value #30# 'swank-backend::buffer) #:g2005 #:g2004 (slot-value #30# 'swank-backend::index) swank-backend::index swank-backend::buffer length < aref #:g2006 #:g2007 #:g2009 + #:g2008 (setf slot-value) #Y(nil nil nil (26 10 0 45 6 13 0 1 13 17 5 12 13 0 1 14 17 5 16 15 12 19 2 16 73 39 59 13 0 1 14 17 5 12 13 0 1 13 17 5 12 19 2 17 12 10 0 45 18 1 13 45 19 8 1 45 20 13 2 10 1 17 5 12 13 0 19 2 21 45 22 13 0 13 3 13 2 33 23 18 3 43 4 22 73 43 1 29) #29# #1# 4397) swank-backend::call-with-lock-held #Y(nil nil nil (24 45 3 26 13 0 1 4 17 5 12 34 24 12 19 2 25 29) #29# #1# 4397) t clos::install-method)) #1# 4397) #Y(si::bytecodes nil nil (15 0 77 15 1 15 2 1 16 12 14 17 19 6 18 29) #31=#A(t (19) (swank-backend::stream-read-char-will-hang-p (swank-backend::slime-input-stream) (swank-backend::s) swank-backend::s #32=#:g2025 #:g2027 #:g2026 (slot-value #32# 'swank-backend::buffer) #:g2029 #:g2028 (slot-value #32# 'swank-backend::index) swank-backend::index slot-value swank-backend::buffer length = #Y(nil nil nil (24 45 3 26 10 0 45 4 13 0 1 11 17 12 12 13 0 1 13 17 12 16 14 12 19 2 15 43 1 29) #31# #1# 4893) t clos::install-method)) #1# 4893) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 8 32 0 43 1 45 9 13 2 13 0 13 1 19 3 10 43 1 43 2 15 0 14 11 19 2 12 39 12 15 0 14 13 19 2 14 52 13 38 8 15 15 15 0 19 2 16 1 0 73 29) #33=#A(t (17) (swank-backend::make-output-stream #:g2030 swank-backend::implementation #:g2031 write-string swank-backend::slime-output-stream :output-fn make-instance #Y(swank-backend::make-output-stream nil nil (24 45 4 26 15 5 14 6 13 0 19 3 7 29) #33# #1# 5207) #:g2032 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #34="DEFIMPLEMENTATION of undefined interface (~S)" warn)) #1# 5207) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 8 32 0 43 1 45 9 13 2 13 0 13 1 19 3 10 43 1 43 2 15 0 14 11 19 2 12 39 12 15 0 14 13 19 2 14 52 13 38 8 15 15 15 0 19 2 16 1 0 73 29) #35=#A(t (17) (swank-backend::make-input-stream #:g2033 swank-backend::implementation #:g2034 swank-backend::read-string swank-backend::slime-input-stream :input-fn make-instance #Y(swank-backend::make-input-stream nil nil (24 45 4 26 15 5 14 6 13 0 19 3 7 29) #35# #1# 5338) #:g2035 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #34# warn)) #1# 5338))
