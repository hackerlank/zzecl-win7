(#Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ("SWANK-BACKEND" si::select-package)) #1=#P"c:/zznix/home/zhoujd/zzemacs/site-lisp/slime/swank-ecl.lisp" 0) #Y(si::bytecodes nil nil (15 0 1 6 12 19 2 7 19 0 0 12 15 8 19 2 9 73 39 10 15 10 19 0 11 12 19 2 12 29) #2=#A(t (13) (swank-backend::ecl-version "+ECL-VERSION-NUMBER+" :ext find-symbol swank-backend::version symbol-value #Y(swank-backend::ecl-version nil nil (26 15 1 14 2 19 2 3 45 4 10 0 39 7 10 0 16 5 38 4 8 0 73 43 1 29) #2# #1# 239) si::fset 100301 < "~&IMPORTANT:~%  ~
              The version of ECL you're using (~A) is too old.~%  ~
              Please upgrade to at least 10.3.1.~%  ~
              Sorry for the inconvenience.~%~%" lisp-implementation-version error)) #1# 239) #Y(si::bytecodes nil nil (15 0 19 1 1 29) #A(t (2) (swank-backend::sockets require)) #1# 742) #Y(si::bytecodes nil nil (1 0 16 1 39 15 14 2 19 1 3 14 2 14 4 19 2 5 52 4 1 6 16 1 73 39 16 14 7 19 1 3 14 7 14 4 19 2 5 52 4 73 29) #A(t (8) ("sys:profile.fas" probe-file :profile require *features* adjoin "sys:serve-event.fas" :serve-event)) #1# 846) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ((optimize (debug 3)) proclaim)) #1# 1140) #Y(si::bytecodes nil nil (14 0 14 1 14 2 19 3 3 14 4 19 0 5 12 15 6 19 2 7 73 39 21 14 8 14 9 14 10 14 11 1 12 16 13 76 39 3 1 14 7 5 73 12 19 2 15 29) #A(t (16) (:gray swank-backend::*gray-stream-symbols* :swank-backend swank-backend::import-from :clos swank-backend::ecl-version 121201 < :eql-specializer :eql-specializer-object :generic-function-declarations :specializer-direct-methods clos::compute-applicable-methods-using-classes fboundp (:compute-applicable-methods-using-classes) swank-backend::import-swank-mop-symbols)) #1# 1174) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 4 32 0 43 1 45 5 13 2 13 0 13 1 19 3 6 43 1 43 2 15 0 14 7 19 2 8 39 12 15 0 14 9 19 2 10 52 9 38 8 15 11 15 0 19 2 12 1 0 73 29) #3=#A(t (13) (swank-backend::preferred-communication-style #:g985 swank-backend::implementation #:g986 #Y(swank-backend::preferred-communication-style nil nil (26 75 73 29) #3# #1# 1669) #:g987 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #4="DEFIMPLEMENTATION of undefined interface (~S)" warn)) #1# 1669) #Y(si::bytecodes nil nil (15 0 1 4 12 19 2 5 1 0 73 29) #5=#A(t (6) (swank-backend::resolve-hostname swank-backend::name sb-bsd-sockets::get-host-by-name sb-bsd-sockets::host-ent-addresses #Y(swank-backend::resolve-hostname nil nil (24 45 1 26 13 0 19 1 2 12 19 1 3 4 73 29) #5# #1# 2006) si::fset)) #1# 2006) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 22 32 0 43 1 45 23 13 2 13 0 13 1 19 3 24 43 1 43 2 15 0 14 25 19 2 26 39 12 15 0 14 27 19 2 28 52 27 38 8 15 29 15 0 19 2 30 1 0 73 29) #6=#A(t (31) (swank-backend::create-socket #:g988 swank-backend::implementation #:g989 swank-backend::host swank-backend::port (nil :backlog) swank-backend::backlog sb-bsd-sockets::inet-socket :type :stream :protocol :tcp make-instance swank-backend::socket #:g993 t #:g994 (setf sb-bsd-sockets::sockopt-reuse-address) swank-backend::resolve-hostname sb-bsd-sockets::socket-bind sb-bsd-sockets::socket-listen #Y(swank-backend::create-socket nil nil (24 45 4 24 45 5 28 6 22 40 2 77 46 7 15 8 14 9 14 10 14 11 14 12 19 5 13 45 14 10 0 45 15 11 16 45 17 13 0 13 1 33 18 18 2 43 1 43 1 13 0 13 3 19 1 19 12 13 2 19 3 20 13 0 10 1 73 40 4 8 5 73 12 19 2 21 10 0 73 43 1 29) #6# #1# 2134) #:g990 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #4# warn)) #1# 2134) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 6 32 0 43 1 45 7 13 2 13 0 13 1 19 3 8 43 1 43 2 15 0 14 9 19 2 10 39 12 15 0 14 11 19 2 12 52 11 38 8 15 13 15 0 19 2 14 1 0 73 29) #7=#A(t (15) (swank-backend::local-port #:g995 swank-backend::implementation #:g996 swank-backend::socket sb-bsd-sockets::socket-name #Y(swank-backend::local-port nil nil (24 45 4 26 9 1 13 0 19 1 5 74 73 29) #7# #1# 2511) #:g997 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #4# warn)) #1# 2511) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 6 32 0 43 1 45 7 13 2 13 0 13 1 19 3 8 43 1 43 2 15 0 14 9 19 2 10 39 12 15 0 14 11 19 2 12 52 11 38 8 15 13 15 0 19 2 14 1 0 73 29) #8=#A(t (15) (swank-backend::close-socket #:g998 swank-backend::implementation #:g999 swank-backend::socket sb-bsd-sockets::socket-close #Y(swank-backend::close-socket nil nil (24 45 4 26 13 0 19 1 5 29) #8# #1# 2607) #:g1000 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #4# warn)) #1# 2607) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 26 32 0 43 1 45 27 13 2 13 0 13 1 19 3 28 43 1 43 2 15 0 14 29 19 2 30 39 12 15 0 14 31 19 2 32 52 31 38 8 15 33 15 0 19 2 34 1 0 73 29) #9=#A(t (35) (swank-backend::accept-connection #:g1001 swank-backend::implementation #:g1002 swank-backend::socket (nil :timeout :buffering :external-format) swank-backend::external-format swank-backend::buffering swank-backend::timeout swank-backend::accept :output t :input :buffering #:g1005 :full nil :none :line (t nil :line) si::ecase-error :element-type character (unsigned-byte 8) :external-format sb-bsd-sockets::socket-make-stream #Y(swank-backend::accept-connection nil nil (24 45 4 28 5 22 40 2 77 46 6 22 40 2 77 46 7 22 40 2 77 46 8 13 3 19 1 9 12 14 10 14 11 14 12 14 11 14 13 10 1 45 14 10 0 42 11 6 11 15 73 38 23 42 16 6 11 17 73 38 15 42 18 6 11 18 73 38 7 13 0 1 19 17 20 12 43 1 14 21 10 2 39 6 1 22 73 38 4 1 23 73 12 14 24 13 2 19 11 25 29) #9# #1# 2692) #:g1003 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #4# warn)) #1# 2692) #Y(si::bytecodes nil nil (15 0 1 10 12 19 2 11 15 0 15 12 15 13 19 3 14 1 0 73 29) #10=#A(t (15) (swank-backend::accept swank-backend::socket 0 #:g1011 #:g1012 sb-bsd-sockets::interrupted-error si::temp #Y(nil nil nil (24 45 6 26 35 1 0 29) #10# #1# 3586) si::*handler-clusters* sb-bsd-sockets::socket-accept #Y(swank-backend::accept nil nil (24 45 1 26 58 60 56 57 2 61 1 1 57 3 60 41 75 45 4 57 2 61 1 25 15 5 34 7 3 6 1 12 11 8 3 48 8 13 5 19 1 9 36 4 36 2 44 1 75 73 36 2 62 43 1 63 35 0 0 62 73 63 29) #10# #1# 3586) si::fset function "Like socket-accept, but retry on EAGAIN." si::set-documentation)) #1# 3586) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 16 32 0 43 1 45 17 13 2 13 0 13 1 19 3 18 43 1 43 2 15 0 14 19 19 2 20 39 12 15 0 14 21 19 2 22 52 21 38 8 15 23 15 0 19 2 24 1 0 73 29) #11=#A(t (25) (swank-backend::socket-fd #:g1014 swank-backend::implementation #:g1015 swank-backend::socket #:g1018 fixnum typep two-way-stream two-way-stream-input-stream sb-bsd-sockets::socket sb-bsd-sockets::socket-file-descriptor file-stream ext::file-stream-fd (fixnum two-way-stream sb-bsd-sockets::socket file-stream) si::etypecase-error #Y(swank-backend::socket-fd nil nil (24 45 4 26 10 0 45 5 13 0 15 6 19 2 7 39 6 10 1 73 38 57 13 0 15 8 19 2 7 39 11 10 1 16 9 12 19 1 0 38 38 13 0 15 10 19 2 7 39 8 13 1 19 1 11 38 22 13 0 15 12 19 2 7 39 7 10 1 16 13 38 7 13 0 1 14 17 15 43 1 29) #11# #1# 3791) #:g1016 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #4# warn)) #1# 3791) #Y(si::bytecodes nil nil (1 0 16 1 1 0 16 2 76 39 5 1 3 52 0 1 0 73 29) #A(t (4) (swank-backend::*external-format-to-coding-system* si::*make-special boundp ((:latin-1 "latin-1" "latin-1-unix" "iso-latin-1-unix" "iso-8859-1" "iso-8859-1-unix") (:utf-8 "utf-8" "utf-8-unix")))) #1# 4069) #Y(si::bytecodes nil nil (15 0 1 12 12 19 2 13 1 0 73 29) #12=#A(t (14) (swank-backend::external-format swank-backend::coding-system swank-backend::x :test equal member #Y(nil nil nil (24 45 2 26 13 1 13 0 14 3 33 4 12 19 4 5 29) #12# #1# 4256) swank-backend::*external-format-to-coding-system* rassoc-if ext::all-encodings string-equal find #Y(swank-backend::external-format nil nil (24 45 1 26 34 6 12 14 7 19 2 8 4 73 40 15 13 0 19 0 9 12 14 3 33 10 12 19 4 11 29) #12# #1# 4256) si::fset)) #1# 4256) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 6 32 0 43 1 45 7 13 2 13 0 13 1 19 3 8 43 1 43 2 15 0 14 9 19 2 10 39 12 15 0 14 11 19 2 12 52 11 38 8 15 13 15 0 19 2 14 1 0 73 29) #13=#A(t (15) (swank-backend::find-external-format #:g1019 swank-backend::implementation #:g1020 swank-backend::coding-system swank-backend::external-format #Y(swank-backend::find-external-format nil nil (24 45 4 26 13 0 19 1 5 29) #13# #1# 4504) #:g1021 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #4# warn)) #1# 4504) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 10 32 0 43 1 45 11 13 2 13 0 13 1 19 3 12 43 1 43 2 15 0 14 13 19 2 14 39 12 15 0 14 15 19 2 16 52 15 38 8 15 17 15 0 19 2 18 1 0 73 29) #14=#A(t (19) (swank-backend::call-with-user-break-handler #:g1022 swank-backend::implementation #:g1023 swank-backend::real-handler function si::terminal-interrupt swank-backend::old-handler swank-backend::make-interrupt-handler si::fset #Y(swank-backend::call-with-user-break-handler nil nil (24 45 4 24 45 5 26 33 6 45 7 15 6 13 2 19 1 8 12 19 2 9 64 7 13 1 20 0 23 65 15 6 13 0 19 2 9 66 43 1 29) #14# #1# 4990) #:g1024 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #4# warn)) #1# 4990) #Y(si::bytecodes nil nil (15 0 1 11 12 19 2 12 1 0 73 29) #15=#A(t (13) (swank-backend::make-interrupt-handler swank-backend::real-handler si::top-level mp::all-processes :key mp::process-name find swank-backend::main-thread swank-backend::args mp::interrupt-process #Y(nil nil nil (27 45 8 13 1 10 2 17 9 29) #15# #1# 5684) #Y(swank-backend::make-interrupt-handler nil nil (24 45 1 26 15 2 19 0 3 12 14 4 33 5 12 19 4 6 45 7 34 10 73 43 1 29) #15# #1# 5684) si::fset)) #1# 5684) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 5 32 0 43 1 45 6 13 2 13 0 13 1 19 3 7 43 1 43 2 15 0 14 8 19 2 9 39 12 15 0 14 10 19 2 11 52 10 38 8 15 12 15 0 19 2 13 1 0 73 29) #16=#A(t (14) (swank-backend::getpid #:g1033 swank-backend::implementation #:g1034 ext::getpid #Y(swank-backend::getpid nil nil (26 19 0 4 29) #16# #1# 5979) #:g1035 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #4# warn)) #1# 5979) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 8 32 0 43 1 45 9 13 2 13 0 13 1 19 3 10 43 1 43 2 15 0 14 11 19 2 12 39 12 15 0 14 13 19 2 14 52 13 38 8 15 15 15 0 19 2 16 1 0 73 29) #17=#A(t (17) (swank-backend::set-default-directory #:g1036 swank-backend::implementation #:g1037 directory namestring ext::chdir swank-backend::default-directory #Y(swank-backend::set-default-directory nil nil (24 45 4 26 10 0 16 5 12 19 1 6 19 0 7 29) #17# #1# 6177) #:g1038 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #4# warn)) #1# 6177) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 6 32 0 43 1 45 7 13 2 13 0 13 1 19 3 8 43 1 43 2 15 0 14 9 19 2 10 39 12 15 0 14 11 19 2 12 52 11 38 8 15 13 15 0 19 2 14 1 0 73 29) #18=#A(t (15) (swank-backend::default-directory #:g1039 swank-backend::implementation #:g1040 ext::getcwd namestring #Y(swank-backend::default-directory nil nil (26 19 0 4 16 5 29) #18# #1# 6334) #:g1041 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #4# warn)) #1# 6334) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 5 32 0 43 1 45 6 13 2 13 0 13 1 19 3 7 43 1 43 2 15 0 14 8 19 2 9 39 12 15 0 14 10 19 2 11 52 10 38 8 15 12 15 0 19 2 13 1 0 73 29) #19=#A(t (14) (swank-backend::quit-lisp #:g1042 swank-backend::implementation #:g1043 ext::quit #Y(swank-backend::quit-lisp nil nil (26 19 0 4 29) #19# #1# 6407) #:g1044 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #4# warn)) #1# 6407) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 18 32 0 43 1 45 19 13 2 13 0 13 1 19 3 20 43 1 43 2 15 0 14 21 19 2 9 39 12 15 0 14 22 19 2 23 52 22 38 8 15 24 15 0 19 2 25 1 0 73 29) #20=#A(t (26) (swank-backend::wait-for-input #:g1045 swank-backend::implementation #:g1046 swank-backend::streams swank-backend::timeout (member swank-backend::timeout '#21=(nil t)) si::assert-failure #21# member 0 swank-backend::check-slime-interrupts :interrupt listen remove-if-not swank-backend::ready 0.1 sleep #Y(swank-backend::wait-for-input nil nil (24 45 4 25 40 2 77 46 5 26 38 6 15 6 19 1 7 13 0 15 8 19 2 9 76 40 -14 58 60 65 57 10 61 1 1 19 0 11 39 8 11 12 73 36 1 38 42 10 2 39 13 33 13 12 13 3 19 2 14 36 1 38 26 33 13 12 13 3 19 2 14 45 15 10 0 39 6 10 0 73 36 2 1 16 16 17 43 1 35 0 0 62 73 63 29) #20# #1# 6457) #:g1047 si::putprop swank-backend::*interface-functions* swank-backend::*unimplemented-interfaces* remove #4# warn)) #1# 6457) #Y(si::bytecodes nil nil (1 0 16 1 1 0 16 2 76 39 4 75 52 0 1 0 73 29) #A(t (3) (swank-backend::*buffer-name* si::*make-special boundp)) #1# 8005) #Y(si::bytecodes nil nil (1 0 16 1 1 0 73 29) #A(t (2) (swank-backend::*buffer-start-position* si::*make-special)) #1# 8058) #Y(si::bytecodes nil nil (15 0 1 5 12 19 2 6 1 0 73 29) #22=#A(t (7) (swank-backend::signal-compiler-condition swank-backend::args signal swank-backend::compiler-condition apply #Y(swank-backend::signal-compiler-condition nil nil (27 45 1 33 2 12 15 3 13 0 19 3 4 29) #22# #1# 8092) si::fset)) #1# 8092) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 5 32 0 43 1 45 6 13 2 13 0 13 1 19 3 7 43 1 43 2 15 0 14 8 19 2 9 39 12 15 0 14 10 19 2 11 52 10 38 8 15 12 15 0 19 2 13 1 0 73 29) #23=#A(t (14) (swank-backend::call-with-compilation-hooks #:g1050 swank-backend::implementation #:g1051 function #Y(swank-backend::call-with-compilation-hooks nil nil (24 45 4 26 13 0 20 0 23 29) #23# #1# 8187) #:g1052 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #4# warn)) #1# 8187) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 16 32 0 43 1 45 17 13 2 13 0 13 1 19 3 18 43 1 43 2 15 0 14 19 19 2 20 39 12 15 0 14 21 19 2 22 52 21 38 8 15 23 15 0 19 2 24 1 0 73 29) #24=#A(t (25) (swank-backend::swank-compile-file #:g1053 swank-backend::implementation #:g1054 swank-backend::input-file swank-backend::output-file swank-backend::load-p swank-backend::external-format (nil :policy) swank-backend::policy :output-file :load :external-format compile-file #Y(nil nil nil (26 13 4 14 10 13 3 14 11 13 2 14 12 13 1 19 7 13 29) #24# #1# 9562) swank-backend::call-with-compilation-hooks #Y(swank-backend::swank-compile-file nil nil (24 45 4 24 45 5 24 45 6 24 45 7 28 8 22 40 2 77 46 9 34 14 12 19 1 15 29) #24# #1# 9562) #:g1055 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #4# warn)) #1# 9562) #Y(si::bytecodes nil nil (1 0 16 1 1 0 16 2 76 39 11 14 3 33 4 12 19 2 5 52 0 1 0 73 29) #A(t (6) (swank-backend::*tmpfile-map* si::*make-special boundp :test equal make-hash-table)) #1# 9944) #Y(si::bytecodes nil nil (15 0 1 8 12 19 2 9 1 0 73 29) #25=#A(t (10) (swank-backend::note-buffer-tmpfile swank-backend::tmp-file swank-backend::buffer-name truename namestring swank-backend::tmp-namestring swank-backend::*tmpfile-map* si::hash-set #Y(swank-backend::note-buffer-tmpfile nil nil (24 45 1 24 45 2 26 10 1 16 3 16 4 45 5 13 0 14 6 13 1 19 3 7 10 0 73 43 1 29) #25# #1# 10002) si::fset)) #1# 10002) #Y(si::bytecodes nil nil (15 0 1 4 12 19 2 5 1 0 73 29) #26=#A(t (6) (swank-backend::tmpfile-to-buffer swank-backend::tmp-file swank-backend::*tmpfile-map* gethash #Y(swank-backend::tmpfile-to-buffer nil nil (24 45 1 26 13 0 14 2 19 2 3 29) #26# #1# 10265) si::fset)) #1# 10265) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 39 32 0 43 1 45 40 13 2 13 0 13 1 19 3 41 43 1 43 2 15 0 14 42 19 2 43 39 12 15 0 14 44 19 2 45 52 44 38 8 15 46 15 0 19 2 47 1 0 73 29) #27=#A(t (48) (swank-backend::swank-compile-string #:g1062 swank-backend::implementation #:g1063 string (nil :policy :filename :position :buffer) swank-backend::buffer position swank-backend::filename swank-backend::policy swank-backend::*buffer-start-position* swank-backend::*buffer-name* "TMP:ecl-swank-tmpfile-" ext::mkstemp swank-backend::failure-p swank-backend::warnings-p swank-backend::fasl-file swank-backend::tmp-file :direction :output :if-exists :supersede open swank-backend::tmp-stream write-string finish-output :load t :source-truename swank-backend::note-buffer-tmpfile :source-offset 1- compile-file close :abort probe-file delete-file #Y(nil nil nil (26 13 3 13 2 49 10 49 11 1 12 16 13 12 77 77 77 46 14 46 15 46 16 46 17 64 99 13 0 14 18 14 19 14 20 14 21 19 5 22 45 23 64 65 13 9 13 0 19 2 24 13 0 19 1 25 13 1 14 26 14 27 14 28 10 6 73 40 8 13 1 13 8 19 2 29 12 14 30 10 7 16 31 12 19 7 32 51 2 55 3 1 55 4 2 73 69 10 0 39 6 13 0 19 1 33 70 65 10 0 39 10 13 0 14 34 14 27 19 3 33 66 43 1 65 10 0 16 35 39 5 10 0 16 36 10 1 39 5 10 1 16 36 66 10 3 76 73 43 4 44 2 29) #27# #1# 10341) swank-backend::call-with-compilation-hooks #Y(swank-backend::swank-compile-string nil nil (24 45 4 28 5 22 40 2 77 46 6 22 40 2 77 46 7 22 40 2 77 46 8 22 40 2 77 46 9 34 37 12 19 1 38 29) #27# #1# 10341) #:g1064 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #4# warn)) #1# 10341) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 8 32 0 43 1 45 9 13 2 13 0 13 1 19 3 10 43 1 43 2 15 0 14 11 19 2 12 39 12 15 0 14 13 19 2 14 52 13 38 8 15 15 15 0 19 2 16 1 0 73 29) #28=#A(t (17) (swank-backend::arglist #:g1065 swank-backend::implementation #:g1066 swank-backend::name ext::function-lambda-list swank-backend::foundp :not-available #Y(swank-backend::arglist nil nil (24 45 4 26 10 0 16 5 47 1 6 45 0 10 1 39 6 10 0 73 38 4 11 7 73 43 2 29) #28# #1# 11542) #:g1067 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #4# warn)) #1# 11542) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 11 32 0 43 1 45 12 13 2 13 0 13 1 19 3 13 43 1 43 2 15 0 14 14 19 2 15 39 12 15 0 14 16 19 2 17 52 16 38 8 15 18 15 0 19 2 19 1 0 73 29) #29=#A(t (20) (swank-backend::function-name #:g1068 swank-backend::implementation #:g1069 swank-backend::f #:g1072 generic-function typep clos::generic-function-name function ext::compiled-function-name #Y(swank-backend::function-name nil nil (24 45 4 26 10 0 45 5 13 0 15 6 19 2 7 39 8 13 1 19 1 8 38 18 13 0 15 9 19 2 7 39 7 10 1 16 10 38 3 75 73 43 1 29) #29# #1# 11724) #:g1070 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #4# warn)) #1# 11724) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 18 32 0 43 1 45 19 13 2 13 0 13 1 19 3 20 43 1 43 2 15 0 14 21 19 2 22 39 12 15 0 14 23 19 2 24 52 23 38 8 15 25 15 0 19 2 26 1 0 73 29) #30=#A(t (27) (swank-backend::describe-symbol-for-emacs #:g1073 swank-backend::implementation #:g1074 symbol swank-backend::result type boundp swank-backend::describe-definition swank-backend::doc #Y(swank-backend::frob nil nil (24 45 6 24 45 7 26 13 0 13 3 20 1 23 73 39 23 13 3 13 1 19 2 8 45 9 13 2 13 0 10 3 7 3 51 3 73 43 1 29) #30# #1# 11882) :variable :function fboundp :class swank-backend::x find-class #Y(nil nil nil (24 45 15 26 13 0 77 19 2 16 29) #30# #1# 11882) #Y(swank-backend::describe-symbol-for-emacs nil nil (24 45 4 26 75 45 5 30 1 10 14 11 33 7 12 32 0 18 2 14 12 33 13 12 32 0 18 2 14 14 34 17 12 32 0 18 2 43 1 10 0 73 43 1 29) #30# #1# 11882) #:g1075 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #4# warn)) #1# 11882) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 13 32 0 43 1 45 14 13 2 13 0 13 1 19 3 15 43 1 43 2 15 0 14 16 19 2 17 39 12 15 0 14 18 19 2 19 52 18 38 8 15 20 15 0 19 2 21 1 0 73 29) #31=#A(t (22) (swank-backend::describe-definition #:g1080 swank-backend::implementation #:g1081 swank-backend::name type :variable variable documentation :function function :class class #Y(swank-backend::describe-definition nil nil (24 45 4 24 45 5 26 10 0 42 6 10 13 1 15 7 19 2 8 38 27 42 9 10 13 1 15 10 19 2 8 38 15 42 11 10 13 1 15 12 19 2 8 38 3 75 73 29) #31# #1# 12355) #:g1082 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #4# warn)) #1# 12355) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 9 32 0 43 1 45 10 13 2 13 0 13 1 19 3 11 43 1 43 2 15 0 14 12 19 2 13 39 12 15 0 14 14 19 2 15 52 14 38 8 15 16 15 0 19 2 17 1 0 73 29) #32=#A(t (18) (swank-backend::type-specifier-p #:g1083 swank-backend::implementation #:g1084 symbol subtypep swank-backend::type-specifier-arglist :not-available eq #Y(swank-backend::type-specifier-p nil nil (24 45 4 26 77 13 0 19 2 5 73 40 13 13 0 19 1 6 12 11 7 17 8 76 73 29) #32# #1# 12576) #:g1085 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #4# warn)) #1# 12576) #Y(si::bytecodes nil nil (15 0 19 1 1 29) #A(t (2) ((si::*break-env* si::*ihs-top* si::*ihs-current* si::*ihs-base* si::*frs-base* si::*frs-top* si::*tpl-commands* si::*tpl-level* si::frs-top si::ihs-top si::ihs-fun si::ihs-env si::sch-frs-base si::set-break-env si::set-current-ihs si::tpl-commands) import)) #1# 12720) #Y(si::bytecodes nil nil (15 0 1 6 12 19 2 7 1 0 73 29) #33=#A(t (8) (swank-backend::make-invoke-debugger-hook swank-backend::hook condition swank-backend::old-hook *debugger-hook* #Y(nil nil nil (24 45 2 24 45 3 26 11 4 39 5 75 73 38 10 13 2 13 1 13 0 20 2 23 29) #33# #1# 13155) #Y(swank-backend::make-invoke-debugger-hook nil nil (24 45 1 26 10 0 73 39 4 34 5 73 29) #33# #1# 13155) si::fset)) #1# 13155) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 8 32 0 43 1 45 9 13 2 13 0 13 1 19 3 10 43 1 43 2 15 0 14 11 19 2 12 39 12 15 0 14 13 19 2 14 52 13 38 8 15 15 15 0 19 2 16 1 0 73 29) #34=#A(t (17) (swank-backend::install-debugger-globally #:g1086 swank-backend::implementation #:g1087 function *debugger-hook* swank-backend::make-invoke-debugger-hook ext::*invoke-debugger-hook* #Y(swank-backend::install-debugger-globally nil nil (24 45 4 26 10 0 52 5 13 0 19 1 6 52 7 73 29) #34# #1# 13451) #:g1088 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #4# warn)) #1# 13451) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 9 32 0 43 1 45 10 13 2 13 0 13 1 19 3 11 43 1 43 2 15 0 14 12 19 2 13 39 12 15 0 14 14 19 2 15 52 14 38 8 15 16 15 0 19 2 17 1 0 73 29) #35=#A(t (18) (swank-backend::call-with-debugger-hook #:g1089 swank-backend::implementation #:g1090 swank-backend::hook swank-backend::fun swank-backend::make-invoke-debugger-hook ext::*invoke-debugger-hook* *debugger-hook* #Y(swank-backend::call-with-debugger-hook nil nil (24 45 4 24 45 5 26 13 1 13 1 19 1 6 12 49 7 49 8 13 0 20 0 23 44 2 29) #35# #1# 13620) #:g1091 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #4# warn)) #1# 13620) #Y(si::bytecodes nil nil (1 0 16 1 1 0 16 2 76 39 4 75 52 0 1 0 73 29) #A(t (3) (swank-backend::*backtrace* si::*make-special boundp)) #1# 13802) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 44 32 0 43 1 45 45 13 2 13 0 13 1 19 3 46 43 1 43 2 15 0 14 47 19 2 48 39 12 15 0 14 49 19 2 50 52 49 38 8 15 51 15 0 19 2 52 1 0 73 29) #36=#A(t (53) (swank-backend::call-with-debugging-environment #:g1092 swank-backend::implementation #:g1093 swank-backend::debugger-loop-fn si::ihs-top si::*ihs-top* si::*ihs-current* si::*frs-top* si::*ihs-base* si::sch-frs-base si::frs-top 1+ si::*frs-base* si::*tpl-level* #:loop-limit1105 swank-backend::ihs #:loop-list-head1106 #:loop-list-tail1107 0 >= si::ihs-fun si::ihs-env rplacd swank-backend::*backtrace* swank-backend::f si::frs-ihs - swank-backend::i plusp elt swank-backend::x si::frs-tag swank-backend::name ext::fixnump #:g1113 #:g1111 third #:g1112 cddr rplaca nreverse si::set-break-env si::set-current-ihs #Y(swank-backend::call-with-debugging-environment nil nil (24 45 4 26 19 0 5 48 6 11 6 48 7 14 8 11 9 17 10 40 6 19 0 11 16 12 48 13 19 0 11 48 8 11 14 16 12 48 14 58 60 78 9 0 14 6 46 15 46 16 75 6 1 45 17 10 0 45 18 57 19 61 2 2 43 13 3 13 4 19 2 20 39 4 35 0 1 13 1 10 3 16 21 12 10 3 16 22 12 75 6 3 6 1 51 1 17 23 10 3 16 12 51 3 35 0 0 10 2 5 73 36 5 62 43 2 43 2 63 48 24 11 13 45 25 57 19 61 2 2 92 11 8 39 4 35 0 1 10 1 16 26 12 14 9 9 1 19 3 27 45 28 10 0 16 29 39 54 14 24 10 0 17 30 45 31 10 3 16 32 45 33 10 0 16 34 76 39 31 10 0 45 35 10 2 45 36 13 1 10 0 16 37 3 45 38 10 1 16 39 12 10 0 17 40 10 0 43 3 43 2 43 1 10 1 16 12 51 1 35 0 0 62 43 1 11 24 16 41 52 24 19 0 42 19 0 43 11 6 48 9 13 0 20 0 23 44 1 44 6 29) #36# #1# 13830) #:g1094 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #4# warn)) #1# 13830) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 17 32 0 43 1 45 18 13 2 13 0 13 1 19 3 19 43 1 43 2 15 0 14 20 19 2 21 39 12 15 0 14 22 19 2 23 52 22 38 8 15 24 15 0 19 2 25 1 0 73 29) #37=#A(t (26) (swank-backend::compute-backtrace #:g1115 swank-backend::implementation #:g1116 swank-backend::start swank-backend::end numberp swank-backend::*backtrace* length min subseq #:loop-list1123 swank-backend::f #:loop-list-head1124 #:loop-list-tail1125 0 rplacd #Y(swank-backend::compute-backtrace nil nil (24 45 4 24 45 5 26 10 0 16 6 39 13 13 0 11 7 16 8 12 19 2 9 51 0 58 60 75 77 14 7 13 2 13 1 19 3 10 12 46 11 46 12 75 6 1 45 13 10 0 45 14 57 15 61 2 2 32 10 4 2 39 4 35 0 1 10 4 4 51 3 10 4 5 51 4 13 1 10 3 6 1 51 1 17 16 35 0 0 10 2 5 73 36 5 62 73 43 2 43 2 63 29) #37# #1# 16108) #:g1117 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #4# warn)) #1# 16108) #Y(si::bytecodes nil nil (15 0 1 5 12 19 2 6 1 0 73 29) #38=#A(t (7) (swank-backend::frame-name swank-backend::frame swank-backend::x symbolp swank-backend::function-name #Y(swank-backend::frame-name nil nil (24 45 1 26 10 0 4 45 2 10 0 16 3 39 6 10 0 73 38 6 13 0 19 1 4 43 1 29) #38# #1# 16301) si::fset)) #1# 16301) #Y(si::bytecodes nil nil (15 0 1 6 12 19 2 7 1 0 73 29) #39=#A(t (8) (swank-backend::function-position swank-backend::fun ext::bc-file position swank-backend::file swank-backend::make-file-location #Y(swank-backend::function-position nil nil (24 45 1 26 10 0 16 2 47 1 3 45 4 10 0 73 39 8 13 0 13 1 19 2 5 43 2 29) #39# #1# 16416) si::fset)) #1# 16416) #Y(si::bytecodes nil nil (15 0 1 14 12 19 2 15 1 0 73 29) #40=#A(t (16) (swank-backend::frame-function swank-backend::frame swank-backend::x swank-backend::fun position #:g1131 symbol typep fboundp fdefinition swank-backend::function-position function (symbol function) si::etypecase-error #Y(swank-backend::frame-function nil nil (24 45 1 26 10 0 4 45 2 75 45 3 75 45 4 10 2 45 5 13 0 15 6 19 2 7 39 22 10 3 16 8 39 14 10 3 16 9 51 2 13 2 19 1 10 51 1 38 29 13 0 15 11 19 2 7 39 14 10 3 51 2 13 3 19 1 10 51 1 38 7 13 0 1 12 17 13 43 1 13 1 13 0 72 2 43 3 29) #40# #1# 16576) si::fset)) #1# 16576) #Y(si::bytecodes nil nil (15 0 1 18 12 19 2 19 1 0 73 29) #41=#A(t (20) (swank-backend::frame-decode-env swank-backend::frame swank-backend::variables swank-backend::blocks swank-backend::functions second si::decode-ihs-env consp remove-if-not si::%dolist-var swank-backend::record swank-backend::record0 swank-backend::record1 symbolp stringp acons ext::fixnump t #Y(swank-backend::frame-decode-env nil nil (24 45 1 26 77 77 77 46 2 46 3 46 4 10 3 16 5 12 19 1 6 51 3 33 7 12 13 3 19 2 8 45 9 75 45 10 38 81 10 1 4 51 0 10 0 4 45 11 10 1 5 45 12 10 1 16 13 40 5 10 1 16 14 39 14 13 1 13 0 13 6 19 3 15 51 6 38 34 10 1 16 16 76 39 10 13 0 10 4 3 51 4 38 18 10 0 16 13 39 10 13 0 10 5 3 51 5 38 3 11 17 43 2 10 1 5 51 1 10 1 40 -83 43 2 13 0 13 1 13 2 72 3 43 3 29) #41# #1# 16911) si::fset)) #1# 16911) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 8 32 0 43 1 45 9 13 2 13 0 13 1 19 3 10 43 1 43 2 15 0 14 11 19 2 12 39 12 15 0 14 13 19 2 14 52 13 38 8 15 15 15 0 19 2 16 1 0 73 29) #42=#A(t (17) (swank-backend::print-frame #:g1146 swank-backend::implementation #:g1147 swank-backend::frame stream "~A" format #Y(swank-backend::print-frame nil nil (24 45 4 24 45 5 26 13 0 15 6 10 1 4 12 19 3 7 29) #42# #1# 17503) #:g1148 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #4# warn)) #1# 17503) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 8 32 0 43 1 45 9 13 2 13 0 13 1 19 3 10 43 1 43 2 15 0 14 11 19 2 12 39 12 15 0 14 13 19 2 14 52 13 38 8 15 15 15 0 19 2 16 1 0 73 29) #43=#A(t (17) (swank-backend::frame-source-location #:g1149 swank-backend::implementation #:g1150 swank-backend::frame-number swank-backend::*backtrace* elt swank-backend::frame-function #Y(swank-backend::frame-source-location nil nil (24 45 4 26 9 1 14 5 10 0 17 6 12 19 1 7 74 73 29) #43# #1# 17591) #:g1151 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #4# warn)) #1# 17591) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 8 32 0 43 1 45 9 13 2 13 0 13 1 19 3 10 43 1 43 2 15 0 14 11 19 2 12 39 12 15 0 14 13 19 2 14 52 13 38 8 15 15 15 0 19 2 16 1 0 73 29) #44=#A(t (17) (swank-backend::frame-catch-tags #:g1152 swank-backend::implementation #:g1153 swank-backend::frame-number swank-backend::*backtrace* elt third #Y(swank-backend::frame-catch-tags nil nil (24 45 4 26 14 5 10 0 17 6 16 7 29) #44# #1# 17716) #:g1154 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #4# warn)) #1# 17716) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 19 32 0 43 1 45 20 13 2 13 0 13 1 19 3 21 43 1 43 2 15 0 14 22 19 2 23 39 12 15 0 14 24 19 2 25 52 24 38 8 15 26 15 0 19 2 27 1 0 73 29) #45=#A(t (28) (swank-backend::frame-locals #:g1155 swank-backend::implementation #:g1156 swank-backend::frame-number swank-backend::*backtrace* elt swank-backend::frame-decode-env #:loop-list1161 swank-backend::value swank-backend::name #:loop-list-head1162 #:loop-list-tail1163 0 #:loop-desetq-temp :name :id :value rplacd #Y(swank-backend::frame-locals nil nil (24 45 4 26 58 60 110 77 77 9 2 14 5 10 1 17 6 12 19 1 7 74 12 46 8 46 9 46 10 75 6 1 45 11 10 0 45 12 57 13 61 2 2 60 10 5 2 39 4 35 0 1 10 5 4 45 14 10 0 4 51 4 10 0 5 51 0 10 0 51 5 43 1 10 5 5 51 5 13 1 14 15 13 3 14 16 9 0 14 17 10 4 6 6 6 1 51 1 17 18 35 0 0 10 2 5 73 36 6 62 73 43 2 43 3 63 29) #45# #1# 17813) #:g1157 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #4# warn)) #1# 17813) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 14 32 0 43 1 45 15 13 2 13 0 13 1 19 3 16 43 1 43 2 15 0 14 17 19 2 18 39 12 15 0 14 19 19 2 20 52 19 38 8 15 21 15 0 19 2 22 1 0 73 29) #46=#A(t (23) (swank-backend::frame-var-value #:g1164 swank-backend::implementation #:g1165 swank-backend::frame-number swank-backend::var-number swank-backend::*backtrace* elt swank-backend::frame-decode-env #:g1169 #:g1170 si::dm-too-few-arguments swank-backend::name swank-backend::value #Y(swank-backend::frame-var-value nil nil (24 45 4 24 45 5 26 9 2 14 6 10 1 17 7 12 19 1 8 74 12 10 0 17 7 45 9 10 0 45 10 10 0 76 39 6 13 1 19 1 11 10 0 4 12 10 0 5 51 0 22 45 12 10 1 45 13 10 0 73 43 4 29) #46# #1# 18059) #:g1166 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #4# warn)) #1# 18059) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 10 32 0 43 1 45 11 13 2 13 0 13 1 19 3 12 43 1 43 2 15 0 14 13 19 2 14 39 12 15 0 14 15 19 2 16 52 15 38 8 15 17 15 0 19 2 18 1 0 73 29) #47=#A(t (19) (swank-backend::disassemble-frame #:g1171 swank-backend::implementation #:g1172 swank-backend::frame-number swank-backend::*backtrace* elt swank-backend::frame-function swank-backend::fun disassemble #Y(swank-backend::disassemble-frame nil nil (24 45 4 26 14 5 10 0 17 6 12 19 1 7 45 8 10 0 16 9 43 1 29) #47# #1# 18307) #:g1173 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #4# warn)) #1# 18307) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 11 32 0 43 1 45 12 13 2 13 0 13 1 19 3 13 43 1 43 2 15 0 14 14 19 2 15 39 12 15 0 14 16 19 2 17 52 16 38 8 15 18 15 0 19 2 19 1 0 73 29) #48=#A(t (20) (swank-backend::eval-in-frame #:g1174 swank-backend::implementation #:g1175 swank-backend::form swank-backend::frame-number swank-backend::*backtrace* elt second swank-backend::env si::eval-with-env #Y(swank-backend::eval-in-frame nil nil (24 45 4 24 45 5 26 14 6 10 0 17 7 16 8 45 9 13 2 13 0 19 2 10 43 1 29) #48# #1# 18451) #:g1176 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #4# warn)) #1# 18451) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 4 32 0 43 1 45 5 13 2 13 0 13 1 19 3 6 43 1 43 2 15 0 14 7 19 2 8 39 12 15 0 14 9 19 2 10 52 9 38 8 15 11 15 0 19 2 12 1 0 73 29) #49=#A(t (13) (swank-backend::gdb-initial-commands #:g1177 swank-backend::implementation #:g1178 #Y(swank-backend::gdb-initial-commands nil nil (26 75 73 29) #49# #1# 18598) #:g1179 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #4# warn)) #1# 18598) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 14 32 0 43 1 45 15 13 2 13 0 13 1 19 3 16 43 1 43 2 15 0 14 17 19 2 18 39 12 15 0 14 19 19 2 20 52 19 38 8 15 21 15 0 19 2 22 1 0 73 29) #50=#A(t (23) (swank-backend::command-line-args #:g1180 swank-backend::implementation #:g1181 ext::argc #:loop-limit1186 swank-backend::n #:loop-list-head1187 #:loop-list-tail1188 0 >= ext::argv rplacd 1+ #Y(swank-backend::command-line-args nil nil (26 58 60 72 9 0 19 0 4 12 46 5 46 6 75 6 1 45 7 10 0 45 8 57 9 61 2 2 34 13 3 13 4 19 2 10 39 4 35 0 1 13 1 10 3 16 11 6 1 51 1 17 12 10 3 16 13 51 3 35 0 0 10 2 5 73 36 5 62 73 43 2 43 2 63 29) #50# #1# 18776) #:g1182 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #4# warn)) #1# 18776) #Y(si::bytecodes nil nil (1 0 16 1 1 0 16 2 76 39 16 15 3 15 4 19 1 5 12 19 2 6 16 7 52 0 1 0 73 29) #A(t (8) (swank-backend::+tags+ si::*make-special boundp "TAGS" "SYS:" translate-logical-pathname merge-pathnames namestring)) #1# 18879) #Y(si::bytecodes nil nil (15 0 1 10 12 19 2 11 1 0 73 29) #51=#A(t (12) (swank-backend::make-file-location swank-backend::file file-position :file translate-logical-pathname namestring :position 1+ (:align t) swank-backend::make-location #Y(swank-backend::make-file-location nil nil (24 45 1 24 45 2 26 14 3 13 1 19 1 4 16 5 6 2 12 14 6 10 0 16 7 6 2 12 15 8 19 3 9 29) #51# #1# 19122) si::fset)) #1# 19122) #Y(si::bytecodes nil nil (15 0 1 8 12 19 2 9 1 0 73 29) #52=#A(t (10) (swank-backend::make-buffer-location swank-backend::buffer-name swank-backend::start-position swank-backend::offset :buffer :offset (:align t) swank-backend::make-location #Y(swank-backend::make-buffer-location nil nil (24 45 1 24 45 2 25 40 3 9 0 46 3 26 14 4 10 2 6 2 12 14 5 13 1 10 0 6 3 12 15 6 19 3 7 29) #52# #1# 19612) si::fset)) #1# 19612) #Y(si::bytecodes nil nil (15 0 1 6 12 19 2 7 1 0 73 29) #53=#A(t (8) (swank-backend::make-tags-location swank-backend::tags :etags-file swank-backend::+tags+ :tag swank-backend::make-location #Y(swank-backend::make-tags-location nil nil (27 45 1 14 2 11 3 6 2 12 14 4 10 0 7 2 12 19 2 5 29) #53# #1# 19820) si::fset)) #1# 19820) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 27 32 0 43 1 45 28 13 2 13 0 13 1 19 3 29 43 1 43 2 15 0 14 30 19 2 31 39 12 15 0 14 32 19 2 33 52 32 38 8 15 34 15 0 19 2 35 1 0 73 29) #54=#A(t (36) (swank-backend::find-definitions #:g1189 swank-backend::implementation #:g1190 swank-backend::name ext::location :all ext::get-annotation swank-backend::annotations #:loop-list1197 swank-backend::annotation #:loop-list-head1198 #:loop-list-tail1199 0 #:g1200 #:g1201 si::dm-too-few-arguments swank-backend::dspec swank-backend::file swank-backend::pos swank-backend::make-file-location rplacd type swank-backend::find-definitions-by-type #Y(nil nil nil (24 45 22 26 13 2 13 0 19 2 23 29) #54# #1# 19938) swank-backend::classify-definition-name mapcan #Y(swank-backend::find-definitions nil nil (24 45 4 26 13 0 15 5 14 6 19 3 7 45 8 10 0 39 139 58 60 134 77 13 1 46 9 46 10 75 6 1 45 11 10 0 45 12 57 13 61 2 2 99 10 4 2 39 4 35 0 1 10 4 4 51 3 10 4 5 51 4 13 1 10 3 45 14 10 0 45 15 10 0 76 39 6 13 1 19 1 16 10 0 4 12 10 0 5 51 0 22 45 17 10 1 76 39 6 13 2 19 1 16 10 1 4 12 10 1 5 51 1 22 45 18 10 2 45 19 13 2 13 1 13 0 19 2 20 6 2 43 5 6 1 51 1 17 21 35 0 0 10 2 5 73 36 5 62 73 43 2 43 2 63 38 13 34 24 12 13 1 19 1 25 12 19 2 26 43 1 29) #54# #1# 19938) #:g1191 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #4# warn)) #1# 19938) #Y(si::bytecodes nil nil (15 0 1 20 12 19 2 21 1 0 73 29) #55=#A(t (22) (swank-backend::classify-definition-name swank-backend::name swank-backend::types fboundp special-operator-p :special-operator macro-function :macro fdefinition generic-function typep :generic-function t si::mangle-name :c-function :lisp-function boundp constantp :constant :global-variable #Y(swank-backend::classify-definition-name nil nil (24 45 1 26 75 45 2 10 1 16 3 39 78 10 1 16 4 39 10 14 5 10 0 3 51 0 38 63 13 1 19 1 6 39 10 14 7 10 0 3 51 0 38 47 10 1 16 8 12 15 9 19 2 10 39 10 14 11 10 0 3 51 0 38 26 13 1 14 12 19 2 13 39 10 14 14 10 0 3 51 0 38 8 14 15 10 0 3 51 0 10 1 16 16 39 24 13 1 19 1 17 39 10 14 18 10 0 3 51 0 38 8 14 19 10 0 3 51 0 10 0 73 43 1 29) #55# #1# 20419) si::fset)) #1# 20419) #Y(si::bytecodes nil nil (15 0 1 32 12 19 2 33 1 0 73 29) #56=#A(t (34) (swank-backend::find-definitions-by-type swank-backend::name type #:g1220 :lisp-function fdefinition swank-backend::source-location swank-backend::loc defun :c-function swank-backend::c-source :generic-function clos::generic-function-methods #:loop-list1221 method swank-backend::specs #:loop-list-head1222 #:loop-list-tail1223 0 clos::method-specializers defmethod rplacd :macro macro-function defmacro :constant defconstant :global-variable defvar :special-operator (:lisp-function :c-function :generic-function :macro :constant :global-variable :special-operator) si::ecase-error #Y(swank-backend::find-definitions-by-type nil nil (24 45 1 24 45 2 26 10 0 45 3 10 0 42 4 34 10 2 16 5 12 19 1 6 45 7 10 0 73 39 15 15 8 10 3 6 2 12 10 0 6 2 6 1 73 43 1 38 273 42 9 34 10 2 16 5 12 19 1 6 45 7 10 0 73 39 15 15 10 10 3 6 2 12 10 0 6 2 6 1 73 43 1 38 237 42 11 118 58 60 113 77 10 3 16 5 12 19 1 12 12 46 13 46 14 75 45 15 75 45 7 75 6 1 45 16 10 0 45 17 57 18 61 2 2 61 10 6 2 39 4 35 0 1 10 6 4 51 5 10 6 5 51 6 13 5 19 1 19 51 4 13 5 19 1 6 51 3 10 3 39 22 13 1 15 20 13 10 10 4 6 3 12 10 3 6 2 6 1 51 1 17 21 35 0 0 10 2 5 73 36 7 62 73 43 2 43 1 43 1 43 2 63 38 117 42 22 35 13 2 19 1 23 12 19 1 6 45 7 10 0 73 39 15 15 24 10 3 6 2 12 10 0 6 2 6 1 73 43 1 38 80 42 25 31 13 2 19 1 6 45 7 10 0 73 39 15 15 26 10 3 6 2 12 10 0 6 2 6 1 73 43 1 38 47 42 27 31 13 2 19 1 6 45 7 10 0 73 39 15 15 28 10 3 6 2 12 10 0 6 2 6 1 73 43 1 38 14 42 29 5 75 73 38 7 13 0 1 30 17 31 43 1 29) #56# #1# 21080) si::fset)) #1# 21080) #Y(si::bytecodes nil nil (15 0 1 5 12 19 2 6 15 7 1 12 12 19 2 6 1 7 73 29) #57=#A(t (13) (swank-backend::c-function-name-p swank-backend::name symbolp t si::mangle-name #Y(swank-backend::c-function-name-p nil nil (24 45 1 26 10 0 16 2 73 39 14 13 0 14 3 19 2 4 73 39 4 11 3 73 29) #57# #1# 22024) si::fset swank-backend::c-function-p swank-backend::object functionp swank-backend::function-name swank-backend::fn-name #Y(swank-backend::c-function-p nil nil (24 45 8 26 10 0 16 9 73 39 20 13 0 19 1 10 45 11 10 0 73 39 6 13 0 19 1 0 43 1 29) #57# #1# 22024))) #1# 22024) #Y(si::bytecodes nil nil (15 0 15 1 1 3 12 19 3 4 29) #58=#A(t (5) (swank-backend::c-function (deftype swank-backend::c-function nil `#59=(satisfies swank-backend::c-function-p)) #59# #Y(swank-backend::c-function nil nil (26 1 2 73 29) #58# #1# 22383) si::do-deftype)) #1# 22383) #Y(si::bytecodes nil nil (15 0 1 8 12 19 2 9 1 0 73 29) #60=#A(t (10) (swank-backend::assert-source-directory #P"SRC:" probe-file "ECL's source directory ~A does not exist. ~
            You can specify a different location via the environment ~
            variable `ECLSRCDIR'." #P"SYS:" translate-logical-pathname namestring error #Y(swank-backend::assert-source-directory nil nil (26 1 1 16 2 76 73 39 14 15 3 15 4 19 1 5 16 6 12 19 2 7 29) #60# #1# 22439) si::fset)) #1# 22439) #Y(si::bytecodes nil nil (15 0 1 5 12 19 2 6 1 0 73 29) #61=#A(t (7) (swank-backend::assert-tags-file swank-backend::+tags+ probe-file "No TAGS file ~A found. It should have been installed with ECL." error #Y(swank-backend::assert-tags-file nil nil (26 11 1 16 2 76 73 39 8 15 3 14 1 19 2 4 29) #61# #1# 22740) si::fset)) #1# 22740) #Y(si::bytecodes nil nil (15 0 1 4 12 19 2 5 1 0 73 29) #62=#A(t (6) (swank-backend::package-names package package-name package-nicknames #Y(swank-backend::package-names nil nil (24 45 1 26 10 0 16 2 12 10 0 16 3 3 73 29) #62# #1# 22901) si::fset)) #1# 22901) #Y(si::bytecodes nil nil (15 0 1 50 12 19 2 51 1 0 73 29) #63=#A(t (52) (swank-backend::source-location swank-backend::object #:converting-errors+1224 error swank-backend::e swank-backend::*debug-swank-backend* swank-backend::make-error-location #Y(nil nil nil (24 45 4 26 11 5 39 5 75 73 38 8 13 0 19 1 6 36 1 29) #63# #1# 22997) si::*handler-clusters* #:g1225 swank-backend::c-function typep swank-backend::assert-source-directory swank-backend::assert-tags-file swank-backend::function-name swank-backend::lisp-name si::assert-failure t si::mangle-name swank-backend::c-name swank-backend::flag swank-backend::make-tags-location symbol-name swank-backend::s symbol-package swank-backend::package-names #:loop-list1226 swank-backend::p #:loop-list-head1227 #:loop-list-tail1228 0 "~A::~A" format rplacd "~(~A::~A~)" apply function ext::compiled-function-file swank-backend::pos swank-backend::file swank-backend::tmpfile-to-buffer swank-backend::make-buffer-location (probe-file swank-backend::file) probe-file (not (minusp swank-backend::pos)) minusp swank-backend::make-file-location method clos::method-function (member nil t) #Y(swank-backend::source-location nil nil (24 45 1 26 57 0 60 362 57 2 60 357 15 3 34 7 3 6 1 12 11 8 3 48 8 10 2 45 9 13 0 15 10 19 2 11 39 175 19 0 12 19 0 13 13 3 19 1 14 45 15 38 6 15 15 19 1 16 10 0 76 40 -9 13 0 14 17 19 2 18 47 1 19 45 20 38 6 15 20 19 1 16 10 0 76 40 -9 33 21 12 13 1 58 60 108 10 3 16 22 45 23 77 10 4 16 24 12 19 1 25 12 46 26 46 27 75 6 1 45 28 10 0 45 29 57 30 61 2 2 58 10 4 2 39 4 35 0 1 10 4 4 51 3 10 4 5 51 4 13 1 77 15 31 13 3 13 5 19 4 32 6 1 51 1 17 33 13 1 77 15 34 13 3 13 5 19 4 32 6 1 51 1 17 33 35 0 0 10 2 5 73 36 6 62 73 43 2 43 2 43 1 63 12 19 3 35 43 2 43 1 38 152 13 0 15 36 19 2 11 39 81 10 3 16 37 47 1 38 45 39 10 0 76 39 7 75 73 36 4 38 57 13 0 19 1 40 39 14 13 0 19 1 40 12 13 1 19 2 41 38 37 38 6 15 42 19 1 16 10 0 16 43 76 40 -11 38 6 15 44 19 1 16 10 1 16 45 76 76 40 -12 13 0 13 1 19 2 46 43 2 38 63 13 0 15 47 19 2 11 39 12 13 3 19 1 48 12 19 1 0 38 43 13 0 15 49 19 2 11 39 32 13 3 19 1 18 47 1 19 45 20 38 6 15 20 19 1 16 10 0 76 40 -9 13 1 19 1 21 43 2 38 3 75 73 43 1 44 1 63 63 29) #63# #1# 22997) si::fset)) #1# 22997) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 8 32 0 43 1 45 9 13 2 13 0 13 1 19 3 10 43 1 43 2 15 0 14 11 19 2 12 39 12 15 0 14 13 19 2 14 52 13 38 8 15 15 15 0 19 2 16 1 0 73 29) #64=#A(t (17) (swank-backend::find-source-location #:g1229 swank-backend::implementation #:g1230 swank-backend::object swank-backend::source-location "Source definition of ~S not found." swank-backend::make-error-location #Y(swank-backend::find-source-location nil nil (24 45 4 26 13 0 19 1 5 73 40 8 15 6 13 0 19 2 7 29) #64# #1# 24697) #:g1231 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #4# warn)) #1# 24697) #Y(si::bytecodes nil nil (1 0 45 1 1 2 45 3 30 1 7 32 0 43 1 45 8 13 2 13 0 13 1 19 3 9 43 1 43 2 15 0 14 10 19 2 11 39 12 15 0 14 12 19 2 13 52 12 38 8 15 14 15 0 19 2 15 1 16 45 17 1 2 45 18 30 1 20 32 0 43 1 45 21 13 2 13 0 13 1 19 3 9 43 1 43 2 15 16 14 10 19 2 11 39 12 15 16 14 12 19 2 13 52 12 38 8 15 14 15 16 19 2 15 1 22 45 23 1 2 45 24 30 1 27 32 0 43 1 45 28 13 2 13 0 13 1 19 3 9 43 1 43 2 15 22 14 10 19 2 11 39 12 15 22 14 12 19 2 13 52 12 38 8 15 14 15 22 19 2 15 1 29 45 30 1 2 45 31 30 1 33 32 0 43 1 45 34 13 2 13 0 13 1 19 3 9 43 1 43 2 15 29 14 10 19 2 11 39 12 15 29 14 12 19 2 13 52 12 38 8 15 14 15 29 19 2 15 1 35 45 36 1 2 45 37 30 1 40 32 0 43 1 45 41 13 2 13 0 13 1 19 3 9 43 1 43 2 15 35 14 10 19 2 11 39 12 15 35 14 12 19 2 13 52 12 38 8 15 14 15 35 19 2 15 1 42 45 43 1 2 45 44 30 1 59 32 0 43 1 45 60 13 2 13 0 13 1 19 3 9 43 1 43 2 15 42 14 10 19 2 11 39 12 15 42 14 12 19 2 13 52 12 38 8 15 14 15 42 19 2 15 1 61 45 62 1 2 45 63 30 1 69 32 0 43 1 45 70 13 2 13 0 13 1 19 3 9 43 1 43 2 15 61 14 10 19 2 11 39 12 15 61 14 12 19 2 13 52 12 38 8 15 14 15 61 19 2 15 1 61 73 29) #65=#A(t (71) (swank-backend::profile #:g1232 swank-backend::implementation #:g1233 swank-backend::fname profile::profile eval #Y(swank-backend::profile nil nil (24 45 4 26 10 0 73 39 9 15 5 10 0 6 2 16 6 29) #65# #1# 24856) #:g1234 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #4# warn swank-backend::unprofile #:g1235 #:g1236 profile::unprofile #Y(swank-backend::unprofile nil nil (24 45 4 26 10 0 73 39 9 15 19 10 0 6 2 16 6 29) #65# #1# 24856) #:g1237 swank-backend::unprofile-all #:g1238 #:g1239 profile::unprofile-all "All functions unprofiled." #Y(swank-backend::unprofile-all nil nil (26 19 0 25 1 26 73 29) #65# #1# 24856) #:g1240 swank-backend::profile-report #:g1241 #:g1242 profile::report #Y(swank-backend::profile-report nil nil (26 19 0 32 29) #65# #1# 24856) #:g1243 swank-backend::profile-reset #:g1244 #:g1245 profile::reset "Reset profiling counters." #Y(swank-backend::profile-reset nil nil (26 19 0 38 1 39 73 29) #65# #1# 24856) #:g1246 swank-backend::profiled-functions #:g1247 #:g1248 profile::*profiled-fun-name->info* #:g1264 #:loop-hashtab-1262 profile::k #:loop-it-1265 si::hash-table-iterator #:loop-hashtab-next-1263 #:loop-list-head1269 #:loop-list-tail1270 0 #:loop-hash-val-temp-1266 #:loop-hash-key-temp-1267 #:loop-hash-predicate-var-1268 rplacd #Y(swank-backend::profiled-functions nil nil (26 58 60 100 77 77 14 45 77 46 46 46 47 46 48 46 49 10 2 16 50 45 51 75 6 1 45 52 10 0 45 53 57 54 61 2 2 51 13 3 20 0 23 47 2 55 47 1 56 45 57 10 0 39 9 10 2 51 10 10 1 51 8 10 0 51 7 43 3 76 39 4 35 0 1 13 1 10 5 6 1 51 1 17 58 35 0 0 10 2 5 73 36 8 62 73 43 2 43 1 43 4 63 29) #65# #1# 24856) #:g1249 swank-backend::profile-package #:g1274 #:g1275 package swank-backend::callers swank-backend::methods find-package package-name #Y(swank-backend::profile-package nil nil (24 45 64 24 45 65 24 45 66 26 15 5 10 2 16 67 16 68 6 2 16 6 29) #65# #1# 24856) #:g1276)) #1# 24856) #Y(si::bytecodes nil nil (1 0 16 1 1 0 16 2 76 39 5 8 0 52 0 1 3 16 1 19 0 4 52 3 1 5 16 1 1 5 16 2 76 39 10 14 6 15 7 19 2 8 52 5 1 9 45 10 1 11 45 12 30 1 17 32 0 43 1 45 18 13 2 13 0 13 1 19 3 19 43 1 43 2 15 9 14 20 19 2 21 39 12 15 9 14 22 19 2 23 52 22 38 8 15 24 15 9 19 2 25 1 26 45 27 1 11 45 28 30 1 56 32 0 43 1 45 57 13 2 13 0 13 1 19 3 19 43 1 43 2 15 26 14 20 19 2 21 39 12 15 26 14 22 19 2 23 52 22 38 8 15 24 15 26 19 2 25 1 58 45 59 1 11 45 60 30 1 68 32 0 43 1 45 69 13 2 13 0 13 1 19 3 19 43 1 43 2 15 58 14 20 19 2 21 39 12 15 58 14 22 19 2 23 52 22 38 8 15 24 15 58 19 2 25 1 70 45 71 1 11 45 72 30 1 74 32 0 43 1 45 75 13 2 13 0 13 1 19 3 19 43 1 43 2 15 70 14 20 19 2 21 39 12 15 70 14 22 19 2 23 52 22 38 8 15 24 15 70 19 2 25 1 76 45 77 1 11 45 78 30 1 82 32 0 43 1 45 83 13 2 13 0 13 1 19 3 19 43 1 43 2 15 76 14 20 19 2 21 39 12 15 76 14 22 19 2 23 52 22 38 8 15 24 15 76 19 2 25 1 84 45 85 1 11 45 86 30 1 90 32 0 43 1 45 91 13 2 13 0 13 1 19 3 19 43 1 43 2 15 84 14 20 19 2 21 39 12 15 84 14 22 19 2 23 52 22 38 8 15 24 15 84 19 2 25 1 92 45 93 1 11 45 94 30 1 102 32 0 43 1 45 103 13 2 13 0 13 1 19 3 19 43 1 43 2 15 92 14 20 19 2 21 39 12 15 92 14 22 19 2 23 52 22 38 8 15 24 15 92 19 2 25 1 104 45 105 1 11 45 106 30 1 107 32 0 43 1 45 108 13 2 13 0 13 1 19 3 19 43 1 43 2 15 104 14 20 19 2 21 39 12 15 104 14 22 19 2 23 52 22 38 8 15 24 15 104 19 2 25 1 109 45 110 1 11 45 111 30 1 113 32 0 43 1 45 114 13 2 13 0 13 1 19 3 19 43 1 43 2 15 109 14 20 19 2 21 39 12 15 109 14 22 19 2 23 52 22 38 8 15 24 15 109 19 2 25 1 115 45 116 1 11 45 117 30 1 119 32 0 43 1 45 120 13 2 13 0 13 1 19 3 19 43 1 43 2 15 115 14 20 19 2 21 39 12 15 115 14 22 19 2 23 52 22 38 8 15 24 15 115 19 2 25 1 121 45 122 1 11 45 123 30 1 125 32 0 43 1 45 126 13 2 13 0 13 1 19 3 19 43 1 43 2 15 121 14 20 19 2 21 39 12 15 121 14 22 19 2 23 52 22 38 8 15 24 15 121 19 2 25 1 127 45 128 1 11 45 129 30 1 130 32 0 43 1 45 131 13 2 13 0 13 1 19 3 19 43 1 43 2 15 127 14 20 19 2 21 39 12 15 127 14 22 19 2 23 52 22 38 8 15 24 15 127 19 2 25 1 132 16 1 1 132 16 2 76 39 10 14 6 15 133 19 2 8 52 132 1 134 16 1 1 134 16 2 76 39 4 75 52 134 1 135 16 136 15 137 15 138 77 77 15 139 15 140 15 141 77 77 77 15 142 9 4 77 77 15 143 19 15 144 15 137 19 1 160 78 156 15 145 1 158 12 19 2 159 15 137 1 171 12 19 2 159 15 137 15 96 15 172 19 3 173 1 174 45 175 1 11 45 176 30 1 193 32 0 43 1 45 194 13 2 13 0 13 1 19 3 19 43 1 43 2 15 174 14 20 19 2 21 39 12 15 174 14 22 19 2 23 52 22 38 8 15 24 15 174 19 2 25 1 195 45 196 1 11 45 197 30 1 216 32 0 43 1 45 217 13 2 13 0 13 1 19 3 19 43 1 43 2 15 195 14 20 19 2 21 39 12 15 195 14 22 19 2 23 52 22 38 8 15 24 15 195 19 2 25 1 195 73 29) #66=#A(t (218) (swank-backend::*thread-id-counter* si::*make-special boundp swank-backend::*thread-id-map* make-hash-table swank-backend::*thread-id-map-lock* :name "thread id map lock" mp::make-lock swank-backend::spawn #:g1277 swank-backend::implementation #:g1278 swank-backend::fn (nil :name) swank-backend::name mp::process-run-function #Y(swank-backend::spawn nil nil (24 45 13 28 14 22 40 2 77 46 15 13 0 13 1 19 2 16 29) #66# #1# 25567) #:g1279 si::putprop swank-backend::*interface-functions* member swank-backend::*unimplemented-interfaces* remove #4# warn swank-backend::thread-id #:g1280 #:g1281 swank-backend::target-thread #:lock1302 mp::lock-owner #:owner1303 mp::lock-count #:count1304 ext::*interrupts-enabled* #:outer-interrupts-enabled1306 si::*allow-with-interrupts* #:outer-allow-with-interrupts1305 mp::get-lock swank-backend::id swank-backend::thread-pointer ext::weak-pointer-value swank-backend::thread remhash eq #Y(nil nil nil (24 45 40 24 45 41 26 10 0 16 42 45 43 10 0 76 39 9 13 2 11 3 17 44 38 15 13 0 10 9 17 45 73 39 6 10 2 73 36 8 43 1 29) #66# #1# 25567) maphash #:g1317 + ext::make-weak-pointer si::hash-set mp::*current-process* > mp::giveup-lock si::check-pending-interrupts #Y(swank-backend::thread-id nil nil (24 45 29 26 57 26 60 143 11 5 45 30 10 0 16 31 45 32 10 1 16 33 45 34 11 35 45 36 75 48 35 11 37 45 38 75 48 37 64 59 10 1 48 35 13 4 19 1 39 34 46 12 11 3 17 47 8 1 45 48 14 0 13 0 19 2 49 52 0 12 43 1 10 6 16 50 12 46 41 46 40 13 0 14 3 13 1 19 3 51 10 0 73 43 2 44 1 65 14 52 10 4 16 31 17 45 39 20 13 3 11 52 17 45 76 40 11 10 4 16 33 12 13 2 19 2 53 39 5 10 4 16 54 66 43 2 44 2 69 11 35 39 4 19 0 55 70 43 3 63 29) #66# #1# 25567) #:g1282 swank-backend::find-thread #:g1321 #:g1322 #:lock1338 #:owner1339 #:count1340 #:outer-interrupts-enabled1342 #:outer-allow-with-interrupts1341 gethash swank-backend::thread-ptr #Y(swank-backend::find-thread nil nil (24 45 40 26 11 5 45 61 10 0 16 31 45 62 10 1 16 33 45 63 11 35 45 64 75 48 35 11 37 45 65 75 48 37 64 48 10 1 48 35 13 4 19 1 39 13 5 14 3 19 2 66 45 67 10 0 39 5 10 0 16 42 45 43 10 0 76 39 7 13 7 11 3 17 44 10 0 73 43 2 44 1 65 14 52 10 4 16 31 17 45 39 20 13 3 11 52 17 45 76 40 11 10 4 16 33 12 13 2 19 2 53 39 5 10 4 16 54 66 43 2 44 2 69 11 35 39 4 19 0 55 70 43 3 29) #66# #1# 25567) #:g1323 swank-backend::thread-name #:g1352 #:g1353 mp::process-name #Y(swank-backend::thread-name nil nil (24 45 43 26 10 0 16 73 29) #66# #1# 25567) #:g1354 swank-backend::thread-status #:g1355 #:g1356 mp::process-active-p "RUNNING" "STOPPED" #Y(swank-backend::thread-status nil nil (24 45 43 26 10 0 16 79 39 6 1 80 73 38 4 1 81 73 29) #66# #1# 25567) #:g1357 swank-backend::make-lock #:g1358 #:g1359 (nil :name) :recursive t #Y(swank-backend::make-lock nil nil (28 87 22 40 2 77 46 15 14 6 13 0 14 88 14 89 19 4 8 29) #66# #1# 25567) #:g1360 swank-backend::call-with-lock-held #:g1361 #:g1362 swank-backend::lock function #:lock1378 #:owner1379 #:count1380 #:outer-interrupts-enabled1382 #:outer-allow-with-interrupts1381 #Y(swank-backend::call-with-lock-held nil nil (24 45 95 24 45 96 26 10 1 45 97 10 0 16 31 45 98 10 1 16 33 45 99 11 35 45 100 75 48 35 11 37 45 101 75 48 37 64 18 10 1 48 35 13 4 19 1 39 13 5 20 0 23 44 1 65 14 52 10 4 16 31 17 45 39 20 13 3 11 52 17 45 76 40 11 10 4 16 33 12 13 2 19 2 53 39 5 10 4 16 54 66 43 2 44 2 69 11 35 39 4 19 0 55 70 43 3 29) #66# #1# 25567) #:g1363 swank-backend::current-thread #:g1392 #:g1393 #Y(swank-backend::current-thread nil nil (26 11 52 73 29) #66# #1# 25567) #:g1394 swank-backend::all-threads #:g1395 #:g1396 mp::all-processes #Y(swank-backend::all-threads nil nil (26 19 0 112 29) #66# #1# 25567) #:g1397 swank-backend::interrupt-thread #:g1398 #:g1399 mp::interrupt-process #Y(swank-backend::interrupt-thread nil nil (24 45 43 24 45 13 26 13 1 10 0 17 118 29) #66# #1# 25567) #:g1400 swank-backend::kill-thread #:g1401 #:g1402 mp::process-kill #Y(swank-backend::kill-thread nil nil (24 45 43 26 10 0 16 124 29) #66# #1# 25567) #:g1403 swank-backend::thread-alive-p #:g1404 #:g1405 #Y(swank-backend::thread-alive-p nil nil (24 45 43 26 10 0 16 79 29) #66# #1# 25567) #:g1406 swank-backend::*mailbox-lock* "mailbox lock" swank-backend::*mailboxes* (type list swank-backend::*mailboxes*) proclaim swank-backend::mailbox swank-backend::mailbox. (swank-backend::thread (swank-backend::mutex #67=(mp::make-lock)) (swank-backend::cvar #68=(mp::make-condition-variable)) (swank-backend::queue #69='nil :type list)) ((swank-backend::thread nil t nil 0 nil) (swank-backend::mutex #67# t nil 1 nil) (swank-backend::cvar #68# t nil 2 nil) (swank-backend::queue #69# list nil 3 nil)) swank-backend::copy-mailbox (swank-backend::make-mailbox) swank-backend::mailbox-p si::define-structure swank-backend::make-mailbox (nil :queue :cvar :mutex :thread) #:thread #:mutex mp::make-condition-variable #:cvar #:queue list typep swank-backend::queue si::structure-type-error 0 si::make-structure #Y(swank-backend::make-mailbox nil nil (28 146 22 40 2 77 46 147 22 40 5 19 0 8 12 46 148 22 40 5 19 0 149 12 46 150 22 40 2 77 46 151 13 0 15 152 19 2 153 76 39 12 13 0 15 152 15 137 15 154 19 4 155 15 156 13 3 13 2 13 1 13 0 19 5 157 29) #66# #1# 25567) si::fset find-class #:lock1422 #:owner1423 #:count1424 #:outer-interrupts-enabled1426 #:outer-allow-with-interrupts1425 :key swank-backend::mailbox.thread find :thread swank-backend::mb #Y(swank-backend::mailbox nil nil (24 45 43 26 11 132 45 161 10 0 16 31 45 162 10 1 16 33 45 163 11 35 45 164 75 48 35 11 37 45 165 75 48 37 64 49 10 1 48 35 13 4 19 1 39 13 5 14 134 14 166 33 167 12 19 4 168 73 40 22 14 169 13 5 19 2 145 45 170 13 0 11 134 3 52 134 10 0 73 43 1 44 1 65 14 52 10 4 16 31 17 45 39 20 13 3 11 52 17 45 76 40 11 10 4 16 33 12 13 2 19 2 53 39 5 10 4 16 54 66 43 2 44 2 69 11 35 39 4 19 0 55 70 43 3 29) #66# #1# 25567) "Return THREAD's mailbox." si::set-documentation swank-backend::send #:g1437 #:g1438 swank-backend::message swank-backend::mbox swank-backend::mailbox.mutex swank-backend::mutex #:lock1456 #:owner1457 #:count1458 #:outer-interrupts-enabled1460 #:outer-allow-with-interrupts1459 #:g1470 swank-backend::mailbox.queue nconc #:g1471 si::structure-set swank-backend::mailbox.cvar mp::condition-variable-broadcast #Y(swank-backend::send nil nil (24 45 43 24 45 177 26 13 1 19 1 137 45 178 13 0 19 1 179 45 180 10 0 45 181 10 0 16 31 45 182 10 1 16 33 45 183 11 35 45 184 75 48 35 11 37 45 185 75 48 37 64 55 10 1 48 35 13 4 19 1 39 10 6 45 186 13 7 19 1 187 12 10 8 6 1 12 19 2 188 45 189 13 1 15 137 9 3 13 0 19 4 190 43 1 43 1 13 6 19 1 191 16 192 44 1 65 14 52 10 4 16 31 17 45 39 20 13 3 11 52 17 45 76 40 11 10 4 16 33 12 13 2 19 2 53 39 5 10 4 16 54 66 43 2 44 2 69 11 35 39 4 19 0 55 70 43 3 43 2 29) #66# #1# 25567) #:g1439 swank-backend::receive-if #:g1472 #:g1473 swank-backend::test swank-backend::timeout (or (not swank-backend::timeout) (eq swank-backend::timeout t)) si::assert-failure swank-backend::check-slime-interrupts #:lock1493 #:owner1494 #:count1495 #:outer-interrupts-enabled1497 #:outer-allow-with-interrupts1496 swank-backend::q member-if swank-backend::tail #:g1507 ldiff #:g1508 0.2 mp::condition-variable-timedwait #Y(swank-backend::receive-if nil nil (24 45 198 25 40 2 77 46 199 26 19 0 104 12 19 1 137 45 178 13 0 19 1 179 45 180 38 6 15 200 19 1 201 10 2 76 40 7 13 2 11 89 17 45 76 40 -18 58 60 201 57 156 61 1 1 19 0 202 10 2 45 203 10 0 16 31 45 204 10 1 16 33 45 205 11 35 45 206 75 48 35 11 37 45 207 75 48 37 64 104 10 1 48 35 13 4 19 1 39 13 8 19 1 187 45 208 13 11 13 0 19 2 209 45 210 10 0 39 42 10 10 45 211 13 2 10 1 17 212 12 10 1 5 12 19 2 188 45 213 13 1 15 137 9 3 13 0 19 4 190 43 1 43 1 10 0 4 73 36 8 43 2 13 9 11 89 17 45 39 8 77 14 89 72 2 36 6 13 8 19 1 191 12 13 7 15 214 19 3 215 44 1 65 14 52 10 4 16 31 17 45 39 20 13 3 11 52 17 45 76 40 11 10 4 16 33 12 13 2 19 2 53 39 5 10 4 16 54 66 43 2 44 2 69 11 35 39 4 19 0 55 70 43 3 35 0 0 62 73 63 43 2 29) #66# #1# 25567) #:g1474)) #1# 25567))
