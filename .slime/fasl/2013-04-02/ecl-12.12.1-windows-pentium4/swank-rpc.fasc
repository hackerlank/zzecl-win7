(#Y(si::bytecodes nil nil (15 0 77 77 15 1 77 77 15 2 77 77 77 19 10 3 29) #A(t (4) ("SWANK-RPC" ("CL") ("READ-MESSAGE" "SWANK-READER-ERROR" "SWANK-READER-ERROR.PACKET" "SWANK-READER-ERROR.CAUSE" "WRITE-MESSAGE") si::dodefpackage)) #1=#P"c:/zznix/home/zhoujd/zzemacs/site-lisp/slime/swank-rpc.lisp" 0) #Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ("SWANK-RPC" si::select-package)) #1# 487) #Y(si::bytecodes nil nil (15 0 15 1 15 2 77 19 4 3 1 0 73 29) #A(t (4) (swank-rpc::swank-reader-error (reader-error) ((:readers (swank-rpc::swank-reader-error.packet) :initargs (:packet) :type string :name swank-rpc::packet) (:readers (swank-rpc::swank-reader-error.cause) :initargs (:cause) :type reader-error :name swank-rpc::cause)) clos::load-defclass)) #1# 514) #Y(si::bytecodes nil nil (15 0 1 18 12 19 2 19 1 0 73 29) #2=#A(t (20) (swank-rpc::read-message stream package swank-rpc::read-packet swank-rpc::packet #:g2045 #:g2046 0 reader-error si::temp #Y(nil nil nil (24 45 9 26 10 0 51 2 35 1 0 29) #2# #1# 771) si::*handler-clusters* swank-rpc::read-form swank-rpc::c swank-rpc::swank-reader-error :packet :cause error #Y(swank-rpc::read-message nil nil (24 45 1 24 45 2 26 13 1 19 1 3 45 4 57 5 60 62 75 45 6 57 7 61 1 28 15 8 34 10 3 6 1 12 11 11 3 48 11 13 3 13 4 19 2 12 12 72 1 36 2 44 1 10 1 45 13 15 14 14 15 13 4 14 16 13 0 19 5 17 43 1 36 2 62 73 43 1 63 43 1 29) #2# #1# 771) si::fset)) #1# 771) #Y(si::bytecodes nil nil (15 0 1 19 12 19 2 20 1 0 73 29) #3=#A(t (21) (swank-rpc::read-packet stream swank-rpc::parse-header length swank-rpc::read-chunk swank-rpc::octets #:g2051 #:g2052 0 error si::temp #Y(nil nil nil (24 45 10 26 10 0 51 2 35 1 0 29) #3# #1# 1013) si::*handler-clusters* swank-backend::utf8-to-string swank-rpc::c swank-rpc::swank-reader-error :packet swank-rpc::asciify :cause #Y(swank-rpc::read-packet nil nil (24 45 1 26 13 0 19 1 2 45 3 13 1 13 0 19 2 4 45 5 57 6 60 61 75 45 7 57 8 61 1 23 15 9 34 11 3 6 1 12 11 12 3 48 12 13 3 19 1 13 36 2 44 1 10 1 45 14 15 15 14 16 13 4 19 1 17 12 14 18 13 0 19 5 9 43 1 36 2 62 73 43 1 63 43 2 29) #3# #1# 1013) si::fset)) #1# 1013) #Y(si::bytecodes nil nil (15 0 1 28 12 19 2 29 1 0 73 29) #4=#A(t (30) (swank-rpc::asciify swank-rpc::packet make-string-output-stream *standard-output* #:g2063 string typep vector char-code map (string vector) si::etypecase-error #:loop-across-list2061 #:loop-across-index-2060 #:loop-across-vector-2059 swank-rpc::code 0 length >= aref 1+ <= code-char write-char t "\\x~x" format get-output-stream-string #Y(swank-rpc::asciify nil nil (24 45 1 26 19 0 2 48 3 77 10 0 45 4 13 0 15 5 19 2 6 39 13 15 7 33 8 12 13 1 19 3 9 38 21 13 0 15 7 19 2 6 39 6 10 1 73 38 7 13 0 1 10 17 11 12 43 1 9 0 9 0 46 12 46 13 46 14 46 15 57 16 61 2 8 65 10 2 16 17 51 4 13 3 13 4 19 2 18 39 4 35 0 1 13 2 13 3 19 2 19 51 1 10 3 16 20 51 3 13 1 9 127 19 2 21 39 11 10 1 16 22 12 19 1 23 38 10 14 24 15 25 13 1 19 3 26 35 0 0 62 43 4 11 3 16 27 44 1 29) #4# #1# 1316) si::fset)) #1# 1316) #Y(si::bytecodes nil nil (15 0 1 8 12 19 2 9 1 0 73 29) #5=#A(t (10) (swank-rpc::parse-header stream string code-char swank-rpc::read-chunk map :radix parse-integer #Y(swank-rpc::parse-header nil nil (24 45 1 26 15 2 33 3 12 13 0 9 6 19 2 4 12 19 3 5 12 14 6 9 16 19 3 7 29) #5# #1# 1671) si::fset)) #1# 1671) #Y(si::bytecodes nil nil (15 0 1 15 12 19 2 16 1 0 73 29) #6=#A(t (17) (swank-rpc::read-chunk stream length :element-type (unsigned-byte 8) make-array swank-rpc::buffer read-sequence count = zerop end-of-file :stream error "Short read: length=~D  count=~D" #Y(swank-rpc::read-chunk nil nil (24 45 1 24 45 2 26 13 0 14 3 15 4 19 3 5 45 6 13 0 13 2 19 2 7 45 8 13 0 13 2 19 2 9 39 6 10 1 73 38 27 10 0 16 10 39 12 15 11 14 12 13 3 19 3 13 38 10 15 14 13 2 13 0 19 3 13 43 2 29) #6# #1# 1799) si::fset)) #1# 1799) #Y(si::bytecodes nil nil (1 0 16 1 75 52 0 15 0 15 2 15 3 19 3 4 1 0 73 29) #A(t (5) (swank-rpc::*validate-input* si::*make-special variable "Set to true to require input that strictly conforms to the protocol" si::set-documentation)) #1# 2166) #Y(si::bytecodes nil nil (15 0 1 9 12 19 2 10 1 0 73 29) #7=#A(t (11) (swank-rpc::read-form string package si::+io-syntax-progv-list+ #8=#:%progv-list *package* swank-rpc::*validate-input* swank-rpc::validating-read read-from-string #Y(swank-rpc::read-form nil nil (24 45 1 24 45 2 26 11 3 45 4 10 0 4 12 10 0 5 67 10 1 48 5 11 6 39 8 13 2 19 1 7 38 6 13 2 19 1 8 44 1 68 43 1 29) #7# #1# 2341) si::fset)) #1# 2341) #Y(si::bytecodes nil nil (15 0 1 5 12 19 2 6 1 0 73 29) #9=#A(t (7) (swank-rpc::validating-read string make-string-input-stream *standard-input* swank-rpc::simple-read #Y(swank-rpc::validating-read nil nil (24 45 1 26 13 0 9 0 77 19 3 2 48 3 19 0 4 44 1 29) #9# #1# 2543) si::fset)) #1# 2543) #Y(si::bytecodes nil nil (15 0 1 29 12 19 2 30 15 0 15 31 15 32 19 3 33 1 0 73 29) #10=#A(t (34) (swank-rpc::simple-read read-char swank-rpc::c #\" make-string-output-stream *standard-output* 0 #\\ write-char get-output-stream-string #\( #:loop-list-head2067 #:loop-list-tail2068 rplacd #:g2069 #\) #\  t (#\) #\ ) si::ecase-error #\' quote swank-rpc::ch nil unread-char string digit-char-p parse-integer intern #Y(swank-rpc::simple-read nil nil (26 19 0 1 45 2 10 0 42 3 66 19 0 4 48 5 58 60 50 75 45 2 57 6 61 2 2 37 19 0 1 51 1 10 1 42 3 7 75 73 36 2 38 18 42 7 10 19 0 1 12 19 1 8 38 6 13 1 19 1 8 35 0 0 62 43 1 63 11 5 16 9 44 1 38 208 42 10 80 58 60 75 75 6 1 45 11 10 0 45 12 57 6 61 2 2 49 13 1 19 0 0 6 1 51 1 17 13 19 0 1 45 14 10 0 42 15 4 75 38 14 42 16 5 11 17 38 7 13 0 1 18 17 19 43 1 76 39 4 35 0 1 35 0 0 10 2 5 73 36 3 62 73 43 2 63 38 126 42 20 11 15 21 19 0 0 6 2 73 38 113 19 0 4 48 5 58 60 73 75 45 22 57 6 61 2 6 60 10 3 51 1 10 1 42 23 7 75 73 36 2 38 35 42 7 10 19 0 1 12 19 1 8 38 23 41 16 4 42 15 12 13 1 19 1 24 75 73 36 2 38 6 13 1 19 1 8 77 77 19 2 1 51 1 35 0 0 62 43 1 63 11 5 16 9 44 1 45 25 13 1 19 1 26 39 8 13 0 19 1 27 38 9 13 0 19 1 28 12 72 1 43 1 43 1 29) #10# #1# 2652) si::fset function "Read a form that conforms to the protocol, otherwise signal an error." si::set-documentation)) #1# 2652) #Y(si::bytecodes nil nil (15 0 1 21 12 19 2 22 1 0 73 29) #11=#A(t (23) (swank-rpc::write-message swank-rpc::message package stream swank-rpc::prin1-to-string-for-emacs string #:g2073 #:g2074 0 error si::temp #Y(nil nil nil (24 45 10 26 10 0 51 2 35 1 0 29) #11# #1# 3803) si::*handler-clusters* swank-backend::string-to-utf8 swank-rpc::c swank-rpc::encoding-error swank-rpc::octets length swank-rpc::write-header write-sequence finish-output #Y(swank-rpc::write-message nil nil (24 45 1 24 45 2 24 45 3 26 13 2 13 1 19 2 4 45 5 57 6 60 50 75 45 7 57 8 61 1 23 15 9 34 11 3 6 1 12 11 12 3 48 12 13 3 19 1 13 36 2 44 1 10 1 45 14 13 0 13 4 19 2 15 43 1 36 2 62 43 1 63 45 16 10 0 16 17 45 17 13 3 13 0 19 2 18 13 1 13 3 19 2 19 13 3 19 1 20 43 3 29) #11# #1# 3803) si::fset)) #1# 3803) #Y(si::bytecodes nil nil (15 0 1 20 12 19 2 21 1 0 73 29) #12=#A(t (22) (swank-rpc::encoding-error condition string :reader-error swank-rpc::asciify "Error during string-to-utf8: ~a" #:g2079 #:g2080 0 error si::temp #Y(nil nil nil (24 45 10 26 10 0 51 2 35 1 0 29) #12# #1# 4200) si::*handler-clusters* princ-to-string type-of format :cl find-package swank-rpc::prin1-to-string-for-emacs swank-backend::string-to-utf8 #Y(swank-rpc::encoding-error nil nil (24 45 1 24 45 2 26 14 3 13 0 19 1 4 12 77 15 5 57 6 60 51 75 45 7 57 8 61 1 26 15 9 34 11 3 6 1 12 11 12 3 48 12 10 4 16 13 12 19 1 4 36 2 44 1 10 1 45 1 77 13 0 72 2 43 1 36 2 62 43 1 63 73 40 11 10 1 16 14 16 13 12 19 1 4 12 19 3 15 6 3 12 11 16 16 17 12 19 2 18 12 19 1 19 29) #12# #1# 4200) si::fset)) #1# 4200) #Y(si::bytecodes nil nil (15 0 1 15 12 19 2 16 1 0 73 29) #13=#A(t (17) (swank-rpc::write-header stream length "~6,'0x" format #:loop-across-list2087 #:loop-across-index-2086 #:loop-across-vector-2085 swank-rpc::c 0 >= aref 1+ char-code write-byte #Y(swank-rpc::write-header nil nil (24 45 1 24 45 2 26 77 77 15 3 13 0 19 3 4 12 9 0 9 0 46 5 46 6 46 7 46 8 57 9 61 2 8 46 10 2 16 2 51 4 13 3 13 4 19 2 10 39 4 35 0 1 13 2 13 3 19 2 11 51 1 10 3 16 12 51 3 10 1 16 13 12 10 6 17 14 35 0 0 62 73 43 4 29) #13# #1# 4648) si::fset)) #1# 4648) #Y(si::bytecodes nil nil (15 0 1 11 12 19 2 12 1 0 73 29) #14=#A(t (13) (swank-rpc::prin1-to-string-for-emacs swank-rpc::object package si::+io-syntax-progv-list+ #8# :downcase *package* *print-pretty* *print-readably* *print-case* prin1-to-string #Y(swank-rpc::prin1-to-string-for-emacs nil nil (24 45 1 24 45 2 26 11 3 45 4 10 0 4 12 10 0 5 67 14 5 77 77 13 1 49 6 49 7 49 8 49 9 10 2 16 10 44 4 68 43 1 29) #14# #1# 4897) si::fset)) #1# 4897))
