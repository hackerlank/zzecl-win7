(#Y(si::bytecodes nil nil (1 0 16 1 29) #A(t (2) ("SWANK" si::select-package)) #1=#P"c:/zznix/home/zhoujd/zzemacs/site-lisp/slime/contrib/swank-util.lisp" 0) #Y(si::bytecodes nil nil (15 0 1 24 12 14 22 9 2 19 4 25 15 0 15 26 15 27 19 3 28 1 0 73 29) #2=#A(t (29) (swank::do-symbols* #:g3332 #:g3331 #:g3333 si::dm-too-few-arguments #:g3334 #:g3335 swank::var *package* package swank::result-form swank::body si::dm-too-many-arguments "SEEN-HT" gensym swank::seen-ht let (make-hash-table :test #'eq) do-symbols unless gethash setf t tagbody #Y(swank::do-symbols* nil nil (24 45 1 24 45 2 26 10 1 5 45 3 10 0 76 39 6 13 2 19 1 4 10 0 4 12 10 0 5 51 0 22 45 5 10 0 45 6 10 0 76 39 6 13 4 19 1 4 10 0 4 12 10 0 5 51 0 22 45 7 10 1 39 13 10 1 4 12 10 1 5 51 1 22 38 3 1 8 45 9 10 2 39 13 10 2 4 12 10 2 5 51 2 22 38 2 75 45 10 10 5 45 11 10 4 39 6 13 8 19 1 12 15 13 19 1 14 45 15 15 16 13 0 1 17 6 2 6 1 12 15 18 13 4 13 3 10 2 6 3 12 15 19 15 20 13 4 10 0 6 3 12 15 21 15 20 13 4 10 0 6 3 12 1 22 6 3 12 15 23 10 1 7 2 6 4 6 3 6 3 73 43 1 29) #2# #1# 108) si::fset function "Just like do-symbols, but makes sure a symbol is visited only once." si::set-documentation)) #1# 108) #Y(si::bytecodes nil nil (15 0 1 39 12 19 2 40 15 0 15 41 15 42 19 3 43 1 0 73 29) #3=#A(t (44) (swank::classify-symbol symbol #:g3349 typep si::do-check-type swank::s type documentation swank-backend::type-specifier-arglist :not-available eq #Y(swank-backend::type-specifier-p nil nil (24 45 5 26 13 0 15 6 19 2 7 73 40 13 13 0 19 1 8 12 11 9 17 10 76 73 29) #3# #1# 554) swank::result boundp constantp :constant :boundp fboundp :fboundp :typespec find-class :class macro-function :macro special-operator-p :special-operator find-package :package #:g3358 #:g3359 0 error si::temp #Y(nil nil nil (24 45 32 26 10 0 51 2 35 1 0 29) #3# #1# 554) si::*handler-clusters* fdefinition condition generic-function :generic-function #Y(swank::classify-symbol nil nil (24 45 1 26 10 0 45 2 13 0 15 1 19 2 3 76 39 13 13 0 15 1 77 15 1 19 4 4 51 1 43 1 30 1 11 75 45 12 10 2 16 13 39 22 13 2 19 1 14 39 6 11 15 73 38 4 11 16 73 12 10 0 3 51 0 10 2 16 17 39 8 14 18 10 0 3 51 0 13 2 32 1 18 1 39 8 14 19 10 0 3 51 0 13 2 77 19 2 20 39 8 14 21 10 0 3 51 0 13 2 19 1 22 39 8 14 23 10 0 3 51 0 10 2 16 24 39 8 14 25 10 0 3 51 0 10 2 16 26 39 8 14 27 10 0 3 51 0 10 2 16 17 39 58 57 28 60 48 75 45 29 57 30 61 1 22 15 31 34 33 3 6 1 12 11 34 3 48 34 10 5 16 35 36 2 44 1 10 1 45 36 77 13 0 72 2 43 1 36 2 62 73 43 1 63 12 15 37 19 2 3 39 8 14 38 10 0 3 51 0 10 0 73 43 1 43 1 29) #3# #1# 554) si::fset function "Returns a list of classifiers that classify SYMBOL according to its
underneath objects (e.g. :BOUNDP if SYMBOL constitutes a special
variable.) The list may contain the following classification
keywords: :BOUNDP, :FBOUNDP, :CONSTANT, :GENERIC-FUNCTION,
:TYPESPEC, :CLASS, :MACRO, :SPECIAL-OPERATOR, and/or :PACKAGE" si::set-documentation)) #1# 554) #Y(si::bytecodes nil nil (15 0 1 37 12 19 2 38 15 0 15 39 15 40 19 3 41 1 0 73 29) #4=#A(t (42) (swank::symbol-classification-string symbol "bfgctmsp" "--------" copy-seq swank::result swank::letters swank::letter position si::char-set #Y(swank::flip nil nil (24 45 7 26 13 2 13 0 13 1 19 2 8 12 13 0 19 3 9 29) #4# #1# 1852) boundp #\b fboundp #\f #:g3377 #:g3378 0 error si::temp #Y(nil nil nil (24 45 19 26 10 0 51 2 35 1 0 29) #4# #1# 1852) si::*handler-clusters* fdefinition condition generic-function typep #\g swank-backend::type-specifier-p #\t find-class #\c macro-function #\m special-operator-p #\s find-package #\p #Y(swank::symbol-classification-string nil nil (24 45 1 26 15 2 1 3 16 4 12 46 5 46 6 30 1 10 10 3 16 11 39 7 15 12 32 0 18 1 10 3 16 13 39 72 15 14 32 0 18 1 57 15 60 48 75 45 16 57 17 61 1 22 15 18 34 20 3 6 1 12 11 21 3 48 21 10 6 16 22 36 2 44 1 10 1 45 23 77 13 0 72 2 43 1 36 2 62 73 43 1 63 12 15 24 19 2 25 39 7 15 26 32 0 18 1 13 3 19 1 27 39 7 15 28 32 0 18 1 13 3 77 19 2 29 39 7 15 30 32 0 18 1 13 3 19 1 31 39 7 15 32 32 0 18 1 10 3 16 33 39 7 15 34 32 0 18 1 10 3 16 35 39 7 15 36 32 0 18 1 10 2 73 43 1 43 2 29) #4# #1# 1852) si::fset function "Return a string in the form -f-c---- where each letter stands for
boundp fboundp generic-function class macro special-operator package" si::set-documentation)) #1# 1852) #Y(si::bytecodes nil nil (11 0 16 1 29) #A(t (2) (:swank-util provide)) #1# 2721))
